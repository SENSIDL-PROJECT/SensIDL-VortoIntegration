/*
* generated by Xtext
*/
grammar InternalSensidl;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package de.fzi.sensidl.language.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package de.fzi.sensidl.language.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import de.fzi.sensidl.language.services.SensidlGrammarAccess;

}

@parser::members {

 	private SensidlGrammarAccess grammarAccess;
 	
    public InternalSensidlParser(TokenStream input, SensidlGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "DataModel";	
   	}
   	
   	@Override
   	protected SensidlGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleDataModel
entryRuleDataModel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDataModelRule()); }
	 iv_ruleDataModel=ruleDataModel 
	 { $current=$iv_ruleDataModel.current; } 
	 EOF 
;

// Rule DataModel
ruleDataModel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='datamodel' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDataModelAccess().getDatamodelKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDataModelAccess().getLeftCurlyBracketKeyword_1());
    }
	otherlv_2='options' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDataModelAccess().getOptionsKeyword_2());
    }
	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getDataModelAccess().getLeftCurlyBracketKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDataModelAccess().getOptionsOptionsParserRuleCall_4_0()); 
	    }
		lv_options_4_0=ruleOptions		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataModelRule());
	        }
       		set(
       			$current, 
       			"options",
        		lv_options_4_0, 
        		"Options");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getDataModelAccess().getRightCurlyBracketKeyword_5());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getDataModelAccess().getRepresentationsRepresentationParserRuleCall_6_0_0()); 
	    }
		lv_representations_6_0=ruleRepresentation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataModelRule());
	        }
       		add(
       			$current, 
       			"representations",
        		lv_representations_6_0, 
        		"Representation");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getDataModelAccess().getDatafieldsDatafieldParserRuleCall_6_1_0()); 
	    }
		lv_datafields_7_0=ruleDatafield		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataModelRule());
	        }
       		add(
       			$current, 
       			"datafields",
        		lv_datafields_7_0, 
        		"Datafield");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_8='transmit' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getDataModelAccess().getTransmitKeyword_7());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getDataModelRule());
	        }
        }
	otherlv_9=RULE_ID
	{
		newLeafNode(otherlv_9, grammarAccess.getDataModelAccess().getTransmitDatafieldCrossReference_8_0()); 
	}

)
)(	otherlv_10=',' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getDataModelAccess().getCommaKeyword_9_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getDataModelRule());
	        }
        }
	otherlv_11=RULE_ID
	{
		newLeafNode(otherlv_11, grammarAccess.getDataModelAccess().getTransmitDatafieldCrossReference_9_1_0()); 
	}

)
))*	otherlv_12='}' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getDataModelAccess().getRightCurlyBracketKeyword_10());
    }
)
;





// Entry rule entryRuleOptions
entryRuleOptions returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOptionsRule()); }
	 iv_ruleOptions=ruleOptions 
	 { $current=$iv_ruleOptions.current; } 
	 EOF 
;

// Rule Options
ruleOptions returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getOptionsAccess().getOptionsAction_0(),
            $current);
    }
)((	otherlv_1='endianess' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getOptionsAccess().getEndianessKeyword_1_0_0());
    }
	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getOptionsAccess().getColonKeyword_1_0_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOptionsAccess().getEndianessEndianessEnumRuleCall_1_0_2_0()); 
	    }
		lv_endianess_3_0=ruleEndianess		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOptionsRule());
	        }
       		set(
       			$current, 
       			"endianess",
        		lv_endianess_3_0, 
        		"Endianess");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=';' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getOptionsAccess().getSemicolonKeyword_1_0_3());
    }
)(	otherlv_5='sensor' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getOptionsAccess().getSensorKeyword_1_1_0());
    }
	otherlv_6='options' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getOptionsAccess().getOptionsKeyword_1_1_1());
    }
	otherlv_7=':' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getOptionsAccess().getColonKeyword_1_1_2());
    }
)(	otherlv_8='sensor' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getOptionsAccess().getSensorKeyword_1_2_0());
    }
	otherlv_9='language' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getOptionsAccess().getLanguageKeyword_1_2_1());
    }
	otherlv_10=':' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getOptionsAccess().getColonKeyword_1_2_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOptionsAccess().getSensorLanguageGenerationLanguageEnumRuleCall_1_2_3_0()); 
	    }
		lv_sensorLanguage_11_0=ruleGenerationLanguage		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOptionsRule());
	        }
       		set(
       			$current, 
       			"sensorLanguage",
        		lv_sensorLanguage_11_0, 
        		"GenerationLanguage");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_12=';' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getOptionsAccess().getSemicolonKeyword_1_2_4());
    }
)(	otherlv_13='sensor' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getOptionsAccess().getSensorKeyword_1_3_0());
    }
	otherlv_14='alignment' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getOptionsAccess().getAlignmentKeyword_1_3_1());
    }
	otherlv_15=':' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getOptionsAccess().getColonKeyword_1_3_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOptionsAccess().getSensorAlignmentAlignmentEnumRuleCall_1_3_3_0()); 
	    }
		lv_sensorAlignment_16_0=ruleAlignment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOptionsRule());
	        }
       		set(
       			$current, 
       			"sensorAlignment",
        		lv_sensorAlignment_16_0, 
        		"Alignment");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_17=';' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getOptionsAccess().getSemicolonKeyword_1_3_4());
    }
)(	otherlv_18='receiver' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getOptionsAccess().getReceiverKeyword_1_4_0());
    }
	otherlv_19='options' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getOptionsAccess().getOptionsKeyword_1_4_1());
    }
	otherlv_20=':' 
    {
    	newLeafNode(otherlv_20, grammarAccess.getOptionsAccess().getColonKeyword_1_4_2());
    }
)(	otherlv_21='receiver' 
    {
    	newLeafNode(otherlv_21, grammarAccess.getOptionsAccess().getReceiverKeyword_1_5_0());
    }
	otherlv_22='language' 
    {
    	newLeafNode(otherlv_22, grammarAccess.getOptionsAccess().getLanguageKeyword_1_5_1());
    }
	otherlv_23=':' 
    {
    	newLeafNode(otherlv_23, grammarAccess.getOptionsAccess().getColonKeyword_1_5_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOptionsAccess().getReceiverLanguageGenerationLanguageEnumRuleCall_1_5_3_0()); 
	    }
		lv_receiverLanguage_24_0=ruleGenerationLanguage		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOptionsRule());
	        }
       		set(
       			$current, 
       			"receiverLanguage",
        		lv_receiverLanguage_24_0, 
        		"GenerationLanguage");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_25=';' 
    {
    	newLeafNode(otherlv_25, grammarAccess.getOptionsAccess().getSemicolonKeyword_1_5_4());
    }
)(	otherlv_26='receiver' 
    {
    	newLeafNode(otherlv_26, grammarAccess.getOptionsAccess().getReceiverKeyword_1_6_0());
    }
	otherlv_27='alignment' 
    {
    	newLeafNode(otherlv_27, grammarAccess.getOptionsAccess().getAlignmentKeyword_1_6_1());
    }
	otherlv_28=':' 
    {
    	newLeafNode(otherlv_28, grammarAccess.getOptionsAccess().getColonKeyword_1_6_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOptionsAccess().getReceiverAlignmentAlignmentEnumRuleCall_1_6_3_0()); 
	    }
		lv_receiverAlignment_29_0=ruleAlignment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOptionsRule());
	        }
       		set(
       			$current, 
       			"receiverAlignment",
        		lv_receiverAlignment_29_0, 
        		"Alignment");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_30=';' 
    {
    	newLeafNode(otherlv_30, grammarAccess.getOptionsAccess().getSemicolonKeyword_1_6_4());
    }
)))
;







// Entry rule entryRuleRepresentation
entryRuleRepresentation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRepresentationRule()); }
	 iv_ruleRepresentation=ruleRepresentation 
	 { $current=$iv_ruleRepresentation.current; } 
	 EOF 
;

// Rule Representation
ruleRepresentation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='repr' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRepresentationAccess().getReprKeyword_0_0());
    }

    |	otherlv_1='representation' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getRepresentationAccess().getRepresentationKeyword_0_1());
    }
)(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getRepresentationAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRepresentationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
)	otherlv_3='is' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getRepresentationAccess().getIsKeyword_2());
    }
(
(
		lv_byteCount_4_0=RULE_INT
		{
			newLeafNode(lv_byteCount_4_0, grammarAccess.getRepresentationAccess().getByteCountINTTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRepresentationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"byteCount",
        		lv_byteCount_4_0, 
        		"INT");
	    }

)
)(	otherlv_5='bytes' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getRepresentationAccess().getBytesKeyword_4_0());
    }

    |	otherlv_6='byte' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getRepresentationAccess().getByteKeyword_4_1());
    }
)	otherlv_7='in' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getRepresentationAccess().getInKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRepresentationAccess().getTypeTypeEnumRuleCall_6_0()); 
	    }
		lv_type_8_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRepresentationRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_8_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_9='description' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getRepresentationAccess().getDescriptionKeyword_7_0());
    }
	otherlv_10=':' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getRepresentationAccess().getColonKeyword_7_1());
    }
(
(
		lv_description_11_0=RULE_STRING
		{
			newLeafNode(lv_description_11_0, grammarAccess.getRepresentationAccess().getDescriptionSTRINGTerminalRuleCall_7_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRepresentationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"description",
        		lv_description_11_0, 
        		"STRING");
	    }

)
))?(	otherlv_12='id' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getRepresentationAccess().getIdKeyword_8_0());
    }
	otherlv_13=':' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getRepresentationAccess().getColonKeyword_8_1());
    }
(
(
		lv_ID_14_0=RULE_STRING
		{
			newLeafNode(lv_ID_14_0, grammarAccess.getRepresentationAccess().getIDSTRINGTerminalRuleCall_8_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRepresentationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"ID",
        		lv_ID_14_0, 
        		"STRING");
	    }

)
))?	otherlv_15=';' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getRepresentationAccess().getSemicolonKeyword_9());
    }
)
;





// Entry rule entryRuleDatafield
entryRuleDatafield returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDatafieldRule()); }
	 iv_ruleDatafield=ruleDatafield 
	 { $current=$iv_ruleDatafield.current; } 
	 EOF 
;

// Rule Datafield
ruleDatafield returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getDatafieldAccess().getVariableDataParserRuleCall_0()); 
    }
    this_VariableData_0=ruleVariableData
    { 
        $current = $this_VariableData_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getDatafieldAccess().getConstantDataParserRuleCall_1()); 
    }
    this_ConstantData_1=ruleConstantData
    { 
        $current = $this_ConstantData_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getDatafieldAccess().getDatastructureParserRuleCall_2()); 
    }
    this_Datastructure_2=ruleDatastructure
    { 
        $current = $this_Datastructure_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getDatafieldAccess().getDeclarationParserRuleCall_3()); 
    }
    this_Declaration_3=ruleDeclaration
    { 
        $current = $this_Declaration_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getDatafieldAccess().getCalculatedParserRuleCall_4()); 
    }
    this_Calculated_4=ruleCalculated
    { 
        $current = $this_Calculated_4.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleVariableData
entryRuleVariableData returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVariableDataRule()); }
	 iv_ruleVariableData=ruleVariableData 
	 { $current=$iv_ruleVariableData.current; } 
	 EOF 
;

// Rule VariableData
ruleVariableData returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getVariableDataAccess().getMeasuredDataParserRuleCall_0()); 
    }
    this_MeasuredData_0=ruleMeasuredData
    { 
        $current = $this_MeasuredData_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getVariableDataAccess().getNonMeasuredDataParserRuleCall_1()); 
    }
    this_NonMeasuredData_1=ruleNonMeasuredData
    { 
        $current = $this_NonMeasuredData_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleMeasuredData
entryRuleMeasuredData returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMeasuredDataRule()); }
	 iv_ruleMeasuredData=ruleMeasuredData 
	 { $current=$iv_ruleMeasuredData.current; } 
	 EOF 
;

// Rule MeasuredData
ruleMeasuredData returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='data' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getMeasuredDataAccess().getDataKeyword_0());
    }
	otherlv_1='of' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMeasuredDataAccess().getOfKeyword_1());
    }
(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getMeasuredDataAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMeasuredDataRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
)(	otherlv_3='in' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getMeasuredDataAccess().getInKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMeasuredDataAccess().getScaleDOUBLEParserRuleCall_3_1_0()); 
	    }
		lv_scale_4_0=ruleDOUBLE		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMeasuredDataRule());
	        }
       		set(
       			$current, 
       			"scale",
        		lv_scale_4_0, 
        		"DOUBLE");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		lv_unit_5_0=RULE_STRING
		{
			newLeafNode(lv_unit_5_0, grammarAccess.getMeasuredDataAccess().getUnitSTRINGTerminalRuleCall_3_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMeasuredDataRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"unit",
        		lv_unit_5_0, 
        		"STRING");
	    }

)
))?	otherlv_6='as' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getMeasuredDataAccess().getAsKeyword_4());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getMeasuredDataRule());
	        }
        }
	otherlv_7=RULE_ID
	{
		newLeafNode(otherlv_7, grammarAccess.getMeasuredDataAccess().getRepresentationRepresentationCrossReference_5_0()); 
	}

)
)(	otherlv_8='description' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getMeasuredDataAccess().getDescriptionKeyword_6_0());
    }
	otherlv_9=':' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getMeasuredDataAccess().getColonKeyword_6_1());
    }
(
(
		lv_description_10_0=RULE_STRING
		{
			newLeafNode(lv_description_10_0, grammarAccess.getMeasuredDataAccess().getDescriptionSTRINGTerminalRuleCall_6_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMeasuredDataRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"description",
        		lv_description_10_0, 
        		"STRING");
	    }

)
))?(	otherlv_11='id' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getMeasuredDataAccess().getIdKeyword_7_0());
    }
	otherlv_12=':' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getMeasuredDataAccess().getColonKeyword_7_1());
    }
(
(
		lv_ID_13_0=RULE_STRING
		{
			newLeafNode(lv_ID_13_0, grammarAccess.getMeasuredDataAccess().getIDSTRINGTerminalRuleCall_7_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMeasuredDataRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"ID",
        		lv_ID_13_0, 
        		"STRING");
	    }

)
))?(
(
		{ 
	        newCompositeNode(grammarAccess.getMeasuredDataAccess().getConstraintsDataConstraintParserRuleCall_8_0()); 
	    }
		lv_constraints_14_0=ruleDataConstraint		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMeasuredDataRule());
	        }
       		add(
       			$current, 
       			"constraints",
        		lv_constraints_14_0, 
        		"DataConstraint");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_15=';' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getMeasuredDataAccess().getSemicolonKeyword_9());
    }
)
;





// Entry rule entryRuleNonMeasuredData
entryRuleNonMeasuredData returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNonMeasuredDataRule()); }
	 iv_ruleNonMeasuredData=ruleNonMeasuredData 
	 { $current=$iv_ruleNonMeasuredData.current; } 
	 EOF 
;

// Rule NonMeasuredData
ruleNonMeasuredData returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='basicdata' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getNonMeasuredDataAccess().getBasicdataKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getNonMeasuredDataAccess().getTypeTypeEnumRuleCall_1_0()); 
	    }
		lv_type_1_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNonMeasuredDataRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_1_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getNonMeasuredDataAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNonMeasuredDataRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
)	otherlv_3='as' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getNonMeasuredDataAccess().getAsKeyword_3());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getNonMeasuredDataRule());
	        }
        }
	otherlv_4=RULE_ID
	{
		newLeafNode(otherlv_4, grammarAccess.getNonMeasuredDataAccess().getRepresentationRepresentationCrossReference_4_0()); 
	}

)
)(	otherlv_5='description' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getNonMeasuredDataAccess().getDescriptionKeyword_5_0());
    }
	otherlv_6=':' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getNonMeasuredDataAccess().getColonKeyword_5_1());
    }
(
(
		lv_description_7_0=RULE_STRING
		{
			newLeafNode(lv_description_7_0, grammarAccess.getNonMeasuredDataAccess().getDescriptionSTRINGTerminalRuleCall_5_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNonMeasuredDataRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"description",
        		lv_description_7_0, 
        		"STRING");
	    }

)
))?(	otherlv_8='id' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getNonMeasuredDataAccess().getIdKeyword_6_0());
    }
	otherlv_9=':' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getNonMeasuredDataAccess().getColonKeyword_6_1());
    }
(
(
		lv_ID_10_0=RULE_STRING
		{
			newLeafNode(lv_ID_10_0, grammarAccess.getNonMeasuredDataAccess().getIDSTRINGTerminalRuleCall_6_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNonMeasuredDataRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"ID",
        		lv_ID_10_0, 
        		"STRING");
	    }

)
))?	otherlv_11=';' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getNonMeasuredDataAccess().getSemicolonKeyword_7());
    }
)
;





// Entry rule entryRuleConstantData
entryRuleConstantData returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConstantDataRule()); }
	 iv_ruleConstantData=ruleConstantData 
	 { $current=$iv_ruleConstantData.current; } 
	 EOF 
;

// Rule ConstantData
ruleConstantData returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='const' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getConstantDataAccess().getConstKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getConstantDataAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstantDataRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='as' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getConstantDataAccess().getAsKeyword_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstantDataRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getConstantDataAccess().getRepresentationRepresentationCrossReference_3_0()); 
	}

)
)(	otherlv_4='is' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getConstantDataAccess().getIsKeyword_4_0());
    }
(
(
		lv_constValue_5_0=RULE_STRING
		{
			newLeafNode(lv_constValue_5_0, grammarAccess.getConstantDataAccess().getConstValueSTRINGTerminalRuleCall_4_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstantDataRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"constValue",
        		lv_constValue_5_0, 
        		"STRING");
	    }

)
))?(	otherlv_6='description' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getConstantDataAccess().getDescriptionKeyword_5_0());
    }
	otherlv_7=':' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getConstantDataAccess().getColonKeyword_5_1());
    }
(
(
		lv_description_8_0=RULE_STRING
		{
			newLeafNode(lv_description_8_0, grammarAccess.getConstantDataAccess().getDescriptionSTRINGTerminalRuleCall_5_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstantDataRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"description",
        		lv_description_8_0, 
        		"STRING");
	    }

)
))?(	otherlv_9='id' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getConstantDataAccess().getIdKeyword_6_0());
    }
	otherlv_10=':' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getConstantDataAccess().getColonKeyword_6_1());
    }
(
(
		lv_ID_11_0=RULE_STRING
		{
			newLeafNode(lv_ID_11_0, grammarAccess.getConstantDataAccess().getIDSTRINGTerminalRuleCall_6_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstantDataRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"ID",
        		lv_ID_11_0, 
        		"STRING");
	    }

)
))?	otherlv_12=';' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getConstantDataAccess().getSemicolonKeyword_7());
    }
)
;





// Entry rule entryRuleCalculated
entryRuleCalculated returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCalculatedRule()); }
	 iv_ruleCalculated=ruleCalculated 
	 { $current=$iv_ruleCalculated.current; } 
	 EOF 
;

// Rule Calculated
ruleCalculated returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='calculate' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getCalculatedAccess().getCalculateKeyword_0_0());
    }

    |	otherlv_1='calculated' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getCalculatedAccess().getCalculatedKeyword_0_1());
    }
)(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getCalculatedAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCalculatedRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
)	otherlv_3='as' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getCalculatedAccess().getAsKeyword_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getCalculatedRule());
	        }
        }
	otherlv_4=RULE_ID
	{
		newLeafNode(otherlv_4, grammarAccess.getCalculatedAccess().getRepresentationRepresentationCrossReference_3_0()); 
	}

)
)	otherlv_5='by' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getCalculatedAccess().getByKeyword_4());
    }
(
(
		lv_methodName_6_0=RULE_ID
		{
			newLeafNode(lv_methodName_6_0, grammarAccess.getCalculatedAccess().getMethodNameIDTerminalRuleCall_5_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCalculatedRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"methodName",
        		lv_methodName_6_0, 
        		"ID");
	    }

)
)(	otherlv_7=',' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getCalculatedAccess().getCommaKeyword_6_0());
    }
(
(
		lv_methodNameOut_8_0=RULE_ID
		{
			newLeafNode(lv_methodNameOut_8_0, grammarAccess.getCalculatedAccess().getMethodNameOutIDTerminalRuleCall_6_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCalculatedRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"methodNameOut",
        		lv_methodNameOut_8_0, 
        		"ID");
	    }

)
))?	otherlv_9='with' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getCalculatedAccess().getWithKeyword_7());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCalculatedAccess().getParameterParameterParserRuleCall_8_0()); 
	    }
		lv_parameter_10_0=ruleParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCalculatedRule());
	        }
       		add(
       			$current, 
       			"parameter",
        		lv_parameter_10_0, 
        		"Parameter");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_11=',' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getCalculatedAccess().getCommaKeyword_9_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCalculatedAccess().getParameterParameterParserRuleCall_9_1_0()); 
	    }
		lv_parameter_12_0=ruleParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCalculatedRule());
	        }
       		add(
       			$current, 
       			"parameter",
        		lv_parameter_12_0, 
        		"Parameter");
	        afterParserOrEnumRuleCall();
	    }

)
))*(	otherlv_13='description' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getCalculatedAccess().getDescriptionKeyword_10_0());
    }
	otherlv_14=':' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getCalculatedAccess().getColonKeyword_10_1());
    }
(
(
		lv_description_15_0=RULE_STRING
		{
			newLeafNode(lv_description_15_0, grammarAccess.getCalculatedAccess().getDescriptionSTRINGTerminalRuleCall_10_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCalculatedRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"description",
        		lv_description_15_0, 
        		"STRING");
	    }

)
))?(	otherlv_16='id' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getCalculatedAccess().getIdKeyword_11_0());
    }
	otherlv_17=':' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getCalculatedAccess().getColonKeyword_11_1());
    }
(
(
		lv_ID_18_0=RULE_STRING
		{
			newLeafNode(lv_ID_18_0, grammarAccess.getCalculatedAccess().getIDSTRINGTerminalRuleCall_11_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCalculatedRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"ID",
        		lv_ID_18_0, 
        		"STRING");
	    }

)
))?	otherlv_19=';' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getCalculatedAccess().getSemicolonKeyword_12());
    }
)
;





// Entry rule entryRuleParameter
entryRuleParameter returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getParameterRule()); }
	 iv_ruleParameter=ruleParameter 
	 { $current=$iv_ruleParameter.current; } 
	 EOF 
;

// Rule Parameter
ruleParameter returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='(' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getParameterAccess().getLeftParenthesisKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getParameterRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getParameterAccess().getDatafieldDatafieldCrossReference_1_0()); 
	}

)
)(	otherlv_2='as' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getParameterAccess().getAsKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getParameterAccess().getArgumentTypeArgumentTypeEnumRuleCall_2_1_0()); 
	    }
		lv_argumentType_3_0=ruleArgumentType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParameterRule());
	        }
       		set(
       			$current, 
       			"argumentType",
        		lv_argumentType_3_0, 
        		"ArgumentType");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_4=')' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getParameterAccess().getRightParenthesisKeyword_3());
    }
)
;





// Entry rule entryRuleDatastructure
entryRuleDatastructure returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDatastructureRule()); }
	 iv_ruleDatastructure=ruleDatastructure 
	 { $current=$iv_ruleDatastructure.current; } 
	 EOF 
;

// Rule Datastructure
ruleDatastructure returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='set' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDatastructureAccess().getSetKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getDatastructureAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDatastructureRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDatastructureAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDatastructureAccess().getDatafieldsDatafieldParserRuleCall_3_0()); 
	    }
		lv_datafields_3_0=ruleDatafield		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDatastructureRule());
	        }
       		add(
       			$current, 
       			"datafields",
        		lv_datafields_3_0, 
        		"Datafield");
	        afterParserOrEnumRuleCall();
	    }

)
)*(	otherlv_4='description' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getDatastructureAccess().getDescriptionKeyword_4_0());
    }
	otherlv_5=':' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getDatastructureAccess().getColonKeyword_4_1());
    }
(
(
		lv_description_6_0=RULE_STRING
		{
			newLeafNode(lv_description_6_0, grammarAccess.getDatastructureAccess().getDescriptionSTRINGTerminalRuleCall_4_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDatastructureRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"description",
        		lv_description_6_0, 
        		"STRING");
	    }

)
))?(	otherlv_7='id' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getDatastructureAccess().getIdKeyword_5_0());
    }
	otherlv_8=':' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getDatastructureAccess().getColonKeyword_5_1());
    }
(
(
		lv_ID_9_0=RULE_STRING
		{
			newLeafNode(lv_ID_9_0, grammarAccess.getDatastructureAccess().getIDSTRINGTerminalRuleCall_5_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDatastructureRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"ID",
        		lv_ID_9_0, 
        		"STRING");
	    }

)
))?	otherlv_10='}' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getDatastructureAccess().getRightCurlyBracketKeyword_6());
    }
	otherlv_11=';' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getDatastructureAccess().getSemicolonKeyword_7());
    }
)
;





// Entry rule entryRuleDeclaration
entryRuleDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDeclarationRule()); }
	 iv_ruleDeclaration=ruleDeclaration 
	 { $current=$iv_ruleDeclaration.current; } 
	 EOF 
;

// Rule Declaration
ruleDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='declaration' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDeclarationAccess().getDeclarationKeyword_0_0());
    }

    |	otherlv_1='decl' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDeclarationAccess().getDeclKeyword_0_1());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getDeclarationAccess().getDeclarationsDatastructureDeclarationParserRuleCall_1_0()); 
	    }
		lv_declarations_2_0=ruleDatastructureDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDeclarationRule());
	        }
       		add(
       			$current, 
       			"declarations",
        		lv_declarations_2_0, 
        		"DatastructureDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getDeclarationAccess().getCommaKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDeclarationAccess().getDeclarationsDatastructureDeclarationParserRuleCall_2_1_0()); 
	    }
		lv_declarations_4_0=ruleDatastructureDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDeclarationRule());
	        }
       		add(
       			$current, 
       			"declarations",
        		lv_declarations_4_0, 
        		"DatastructureDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_5=';' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getDeclarationAccess().getSemicolonKeyword_3());
    }
)
;





// Entry rule entryRuleDatastructureDeclaration
entryRuleDatastructureDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDatastructureDeclarationRule()); }
	 iv_ruleDatastructureDeclaration=ruleDatastructureDeclaration 
	 { $current=$iv_ruleDatastructureDeclaration.current; } 
	 EOF 
;

// Rule DatastructureDeclaration
ruleDatastructureDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getDatastructureDeclarationRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getDatastructureDeclarationAccess().getReusedDatastructureDatastructureCrossReference_0_0()); 
	}

)
)(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getDatastructureDeclarationAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDatastructureDeclarationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
))
;





// Entry rule entryRuleConstraint
entryRuleConstraint returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConstraintRule()); }
	 iv_ruleConstraint=ruleConstraint 
	 { $current=$iv_ruleConstraint.current; } 
	 EOF 
;

// Rule Constraint
ruleConstraint returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getConstraintAccess().getDataConstraintParserRuleCall()); 
    }
    this_DataConstraint_0=ruleDataConstraint
    { 
        $current = $this_DataConstraint_0.current; 
        afterParserOrEnumRuleCall();
    }

;





// Entry rule entryRuleDataConstraint
entryRuleDataConstraint returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDataConstraintRule()); }
	 iv_ruleDataConstraint=ruleDataConstraint 
	 { $current=$iv_ruleDataConstraint.current; } 
	 EOF 
;

// Rule DataConstraint
ruleDataConstraint returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getDataConstraintAccess().getDataRangeParserRuleCall_0()); 
    }
    this_DataRange_0=ruleDataRange
    { 
        $current = $this_DataRange_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getDataConstraintAccess().getDataAdaptionParserRuleCall_1()); 
    }
    this_DataAdaption_1=ruleDataAdaption
    { 
        $current = $this_DataAdaption_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleDataRange
entryRuleDataRange returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDataRangeRule()); }
	 iv_ruleDataRange=ruleDataRange 
	 { $current=$iv_ruleDataRange.current; } 
	 EOF 
;

// Rule DataRange
ruleDataRange returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='from' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDataRangeAccess().getFromKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDataRangeAccess().getLowerBoundBoundParserRuleCall_1_0()); 
	    }
		lv_lowerBound_1_0=ruleBound		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataRangeRule());
	        }
       		set(
       			$current, 
       			"lowerBound",
        		lv_lowerBound_1_0, 
        		"Bound");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='to' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDataRangeAccess().getToKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDataRangeAccess().getUpperBoundBoundParserRuleCall_3_0()); 
	    }
		lv_upperBound_3_0=ruleBound		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataRangeRule());
	        }
       		set(
       			$current, 
       			"upperBound",
        		lv_upperBound_3_0, 
        		"Bound");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4='description' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getDataRangeAccess().getDescriptionKeyword_4_0());
    }
	otherlv_5=':' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getDataRangeAccess().getColonKeyword_4_1());
    }
(
(
		lv_description_6_0=RULE_STRING
		{
			newLeafNode(lv_description_6_0, grammarAccess.getDataRangeAccess().getDescriptionSTRINGTerminalRuleCall_4_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDataRangeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"description",
        		lv_description_6_0, 
        		"STRING");
	    }

)
))?(	otherlv_7='id' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getDataRangeAccess().getIdKeyword_5_0());
    }
	otherlv_8=':' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getDataRangeAccess().getColonKeyword_5_1());
    }
(
(
		lv_ID_9_0=RULE_STRING
		{
			newLeafNode(lv_ID_9_0, grammarAccess.getDataRangeAccess().getIDSTRINGTerminalRuleCall_5_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDataRangeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"ID",
        		lv_ID_9_0, 
        		"STRING");
	    }

)
))?)
;





// Entry rule entryRuleDataAdaption
entryRuleDataAdaption returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDataAdaptionRule()); }
	 iv_ruleDataAdaption=ruleDataAdaption 
	 { $current=$iv_ruleDataAdaption.current; } 
	 EOF 
;

// Rule DataAdaption
ruleDataAdaption returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='with' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDataAdaptionAccess().getWithKeyword_0());
    }
	otherlv_1='scaling factor' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDataAdaptionAccess().getScalingFactorKeyword_1());
    }
	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDataAdaptionAccess().getColonKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDataAdaptionAccess().getScalingFactorDOUBLEParserRuleCall_3_0()); 
	    }
		lv_scalingFactor_3_0=ruleDOUBLE		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataAdaptionRule());
	        }
       		set(
       			$current, 
       			"scalingFactor",
        		lv_scalingFactor_3_0, 
        		"DOUBLE");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='and' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getDataAdaptionAccess().getAndKeyword_4());
    }
	otherlv_5='offset' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getDataAdaptionAccess().getOffsetKeyword_5());
    }
	otherlv_6=':' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getDataAdaptionAccess().getColonKeyword_6());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDataAdaptionAccess().getOffsetDOUBLEParserRuleCall_7_0()); 
	    }
		lv_offset_7_0=ruleDOUBLE		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataAdaptionRule());
	        }
       		set(
       			$current, 
       			"offset",
        		lv_offset_7_0, 
        		"DOUBLE");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_8='description' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getDataAdaptionAccess().getDescriptionKeyword_8_0());
    }
	otherlv_9=':' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getDataAdaptionAccess().getColonKeyword_8_1());
    }
(
(
		lv_description_10_0=RULE_STRING
		{
			newLeafNode(lv_description_10_0, grammarAccess.getDataAdaptionAccess().getDescriptionSTRINGTerminalRuleCall_8_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDataAdaptionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"description",
        		lv_description_10_0, 
        		"STRING");
	    }

)
))?(	otherlv_11='id' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getDataAdaptionAccess().getIdKeyword_9_0());
    }
	otherlv_12=':' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getDataAdaptionAccess().getColonKeyword_9_1());
    }
(
(
		lv_ID_13_0=RULE_STRING
		{
			newLeafNode(lv_ID_13_0, grammarAccess.getDataAdaptionAccess().getIDSTRINGTerminalRuleCall_9_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDataAdaptionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"ID",
        		lv_ID_13_0, 
        		"STRING");
	    }

)
))?)
;





// Entry rule entryRuleBound
entryRuleBound returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBoundRule()); }
	 iv_ruleBound=ruleBound 
	 { $current=$iv_ruleBound.current; } 
	 EOF 
;

// Rule Bound
ruleBound returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getBoundAccess().getValueDOUBLEParserRuleCall_0_0()); 
	    }
		lv_value_0_0=ruleDOUBLE		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBoundRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_0_0, 
        		"DOUBLE");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_unit_1_0=RULE_STRING
		{
			newLeafNode(lv_unit_1_0, grammarAccess.getBoundAccess().getUnitSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBoundRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"unit",
        		lv_unit_1_0, 
        		"STRING");
	    }

)
)?)
;





// Entry rule entryRuleDOUBLE
entryRuleDOUBLE returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getDOUBLERule()); } 
	 iv_ruleDOUBLE=ruleDOUBLE 
	 { $current=$iv_ruleDOUBLE.current.getText(); }  
	 EOF 
;

// Rule DOUBLE
ruleDOUBLE returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_INT_0=RULE_INT    {
		$current.merge(this_INT_0);
    }

    { 
    newLeafNode(this_INT_0, grammarAccess.getDOUBLEAccess().getINTTerminalRuleCall_0()); 
    }
(
	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getDOUBLEAccess().getFullStopKeyword_1_0()); 
    }
    this_INT_2=RULE_INT    {
		$current.merge(this_INT_2);
    }

    { 
    newLeafNode(this_INT_2, grammarAccess.getDOUBLEAccess().getINTTerminalRuleCall_1_1()); 
    }
)?)
    ;





// Rule Alignment
ruleAlignment returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='_8BIT' 
	{
        $current = grammarAccess.getAlignmentAccess().get_8BITEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getAlignmentAccess().get_8BITEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='_16BIT' 
	{
        $current = grammarAccess.getAlignmentAccess().get_16BITEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getAlignmentAccess().get_16BITEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='_32BIT' 
	{
        $current = grammarAccess.getAlignmentAccess().get_32BITEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getAlignmentAccess().get_32BITEnumLiteralDeclaration_2()); 
    }
)
    |(	enumLiteral_3='_64BIT' 
	{
        $current = grammarAccess.getAlignmentAccess().get_64BITEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getAlignmentAccess().get_64BITEnumLiteralDeclaration_3()); 
    }
));



// Rule Endianess
ruleEndianess returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='BIG_ENDIAN' 
	{
        $current = grammarAccess.getEndianessAccess().getBIG_ENDIANEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getEndianessAccess().getBIG_ENDIANEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='LITTLE_ENDIAN' 
	{
        $current = grammarAccess.getEndianessAccess().getLITTLE_ENDIANEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getEndianessAccess().getLITTLE_ENDIANEnumLiteralDeclaration_1()); 
    }
));



// Rule GenerationLanguage
ruleGenerationLanguage returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='JAVA' 
	{
        $current = grammarAccess.getGenerationLanguageAccess().getJAVAEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getGenerationLanguageAccess().getJAVAEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='CPP' 
	{
        $current = grammarAccess.getGenerationLanguageAccess().getCPPEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getGenerationLanguageAccess().getCPPEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='C' 
	{
        $current = grammarAccess.getGenerationLanguageAccess().getCEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getGenerationLanguageAccess().getCEnumLiteralDeclaration_2()); 
    }
)
    |(	enumLiteral_3='CSHARP' 
	{
        $current = grammarAccess.getGenerationLanguageAccess().getCSHARPEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getGenerationLanguageAccess().getCSHARPEnumLiteralDeclaration_3()); 
    }
));



// Rule ArgumentType
ruleArgumentType returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
(	enumLiteral_0='BYTE_ARRAY' 
	{
        $current = grammarAccess.getArgumentTypeAccess().getBYTE_ARRAYEnumLiteralDeclaration().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getArgumentTypeAccess().getBYTE_ARRAYEnumLiteralDeclaration()); 
    }
);



// Rule Type
ruleType returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='BOOL' 
	{
        $current = grammarAccess.getTypeAccess().getBOOLEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getTypeAccess().getBOOLEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='CHAR' 
	{
        $current = grammarAccess.getTypeAccess().getCHAREnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getTypeAccess().getCHAREnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='SHORT' 
	{
        $current = grammarAccess.getTypeAccess().getSHORTEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getTypeAccess().getSHORTEnumLiteralDeclaration_2()); 
    }
)
    |(	enumLiteral_3='INT' 
	{
        $current = grammarAccess.getTypeAccess().getINTEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getTypeAccess().getINTEnumLiteralDeclaration_3()); 
    }
)
    |(	enumLiteral_4='LONG' 
	{
        $current = grammarAccess.getTypeAccess().getLONGEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_4, grammarAccess.getTypeAccess().getLONGEnumLiteralDeclaration_4()); 
    }
)
    |(	enumLiteral_5='LONGLONG' 
	{
        $current = grammarAccess.getTypeAccess().getLONGLONGEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_5, grammarAccess.getTypeAccess().getLONGLONGEnumLiteralDeclaration_5()); 
    }
)
    |(	enumLiteral_6='FLOAT' 
	{
        $current = grammarAccess.getTypeAccess().getFLOATEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_6, grammarAccess.getTypeAccess().getFLOATEnumLiteralDeclaration_6()); 
    }
)
    |(	enumLiteral_7='DOUBLE' 
	{
        $current = grammarAccess.getTypeAccess().getDOUBLEEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_7, grammarAccess.getTypeAccess().getDOUBLEEnumLiteralDeclaration_7()); 
    }
)
    |(	enumLiteral_8='LONGDOUBLE' 
	{
        $current = grammarAccess.getTypeAccess().getLONGDOUBLEEnumLiteralDeclaration_8().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_8, grammarAccess.getTypeAccess().getLONGDOUBLEEnumLiteralDeclaration_8()); 
    }
));



RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


