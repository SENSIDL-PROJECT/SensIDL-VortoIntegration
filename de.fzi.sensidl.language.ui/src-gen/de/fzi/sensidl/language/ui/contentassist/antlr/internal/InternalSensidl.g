/*
* generated by Xtext
*/
grammar InternalSensidl;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package de.fzi.sensidl.language.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package de.fzi.sensidl.language.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import de.fzi.sensidl.language.services.SensidlGrammarAccess;

}

@parser::members {
 
 	private SensidlGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(SensidlGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleDataModel
entryRuleDataModel 
:
{ before(grammarAccess.getDataModelRule()); }
	 ruleDataModel
{ after(grammarAccess.getDataModelRule()); } 
	 EOF 
;

// Rule DataModel
ruleDataModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDataModelAccess().getGroup()); }
(rule__DataModel__Group__0)
{ after(grammarAccess.getDataModelAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOptions
entryRuleOptions 
:
{ before(grammarAccess.getOptionsRule()); }
	 ruleOptions
{ after(grammarAccess.getOptionsRule()); } 
	 EOF 
;

// Rule Options
ruleOptions
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOptionsAccess().getGroup()); }
(rule__Options__Group__0)
{ after(grammarAccess.getOptionsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRepresentation
entryRuleRepresentation 
:
{ before(grammarAccess.getRepresentationRule()); }
	 ruleRepresentation
{ after(grammarAccess.getRepresentationRule()); } 
	 EOF 
;

// Rule Representation
ruleRepresentation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRepresentationAccess().getGroup()); }
(rule__Representation__Group__0)
{ after(grammarAccess.getRepresentationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDatafield
entryRuleDatafield 
:
{ before(grammarAccess.getDatafieldRule()); }
	 ruleDatafield
{ after(grammarAccess.getDatafieldRule()); } 
	 EOF 
;

// Rule Datafield
ruleDatafield
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDatafieldAccess().getAlternatives()); }
(rule__Datafield__Alternatives)
{ after(grammarAccess.getDatafieldAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCalculated
entryRuleCalculated 
:
{ before(grammarAccess.getCalculatedRule()); }
	 ruleCalculated
{ after(grammarAccess.getCalculatedRule()); } 
	 EOF 
;

// Rule Calculated
ruleCalculated
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCalculatedAccess().getGroup()); }
(rule__Calculated__Group__0)
{ after(grammarAccess.getCalculatedAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParameter
entryRuleParameter 
:
{ before(grammarAccess.getParameterRule()); }
	 ruleParameter
{ after(grammarAccess.getParameterRule()); } 
	 EOF 
;

// Rule Parameter
ruleParameter
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParameterAccess().getGroup()); }
(rule__Parameter__Group__0)
{ after(grammarAccess.getParameterAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDatastructure
entryRuleDatastructure 
:
{ before(grammarAccess.getDatastructureRule()); }
	 ruleDatastructure
{ after(grammarAccess.getDatastructureRule()); } 
	 EOF 
;

// Rule Datastructure
ruleDatastructure
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDatastructureAccess().getGroup()); }
(rule__Datastructure__Group__0)
{ after(grammarAccess.getDatastructureAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleData
entryRuleData 
:
{ before(grammarAccess.getDataRule()); }
	 ruleData
{ after(grammarAccess.getDataRule()); } 
	 EOF 
;

// Rule Data
ruleData
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDataAccess().getGroup()); }
(rule__Data__Group__0)
{ after(grammarAccess.getDataAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDataConstraint
entryRuleDataConstraint 
:
{ before(grammarAccess.getDataConstraintRule()); }
	 ruleDataConstraint
{ after(grammarAccess.getDataConstraintRule()); } 
	 EOF 
;

// Rule DataConstraint
ruleDataConstraint
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDataConstraintAccess().getAlternatives()); }
(rule__DataConstraint__Alternatives)
{ after(grammarAccess.getDataConstraintAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDataRange
entryRuleDataRange 
:
{ before(grammarAccess.getDataRangeRule()); }
	 ruleDataRange
{ after(grammarAccess.getDataRangeRule()); } 
	 EOF 
;

// Rule DataRange
ruleDataRange
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDataRangeAccess().getGroup()); }
(rule__DataRange__Group__0)
{ after(grammarAccess.getDataRangeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDataAdaption
entryRuleDataAdaption 
:
{ before(grammarAccess.getDataAdaptionRule()); }
	 ruleDataAdaption
{ after(grammarAccess.getDataAdaptionRule()); } 
	 EOF 
;

// Rule DataAdaption
ruleDataAdaption
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDataAdaptionAccess().getGroup()); }
(rule__DataAdaption__Group__0)
{ after(grammarAccess.getDataAdaptionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBound
entryRuleBound 
:
{ before(grammarAccess.getBoundRule()); }
	 ruleBound
{ after(grammarAccess.getBoundRule()); } 
	 EOF 
;

// Rule Bound
ruleBound
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBoundAccess().getGroup()); }
(rule__Bound__Group__0)
{ after(grammarAccess.getBoundAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMetadata
entryRuleMetadata 
:
{ before(grammarAccess.getMetadataRule()); }
	 ruleMetadata
{ after(grammarAccess.getMetadataRule()); } 
	 EOF 
;

// Rule Metadata
ruleMetadata
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMetadataAccess().getGroup()); }
(rule__Metadata__Group__0)
{ after(grammarAccess.getMetadataAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDOUBLE
entryRuleDOUBLE 
:
{ before(grammarAccess.getDOUBLERule()); }
	 ruleDOUBLE
{ after(grammarAccess.getDOUBLERule()); } 
	 EOF 
;

// Rule DOUBLE
ruleDOUBLE
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDOUBLEAccess().getGroup()); }
(rule__DOUBLE__Group__0)
{ after(grammarAccess.getDOUBLEAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




// Rule GenerationLanguage
ruleGenerationLanguage
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGenerationLanguageAccess().getAlternatives()); }
(rule__GenerationLanguage__Alternatives)
{ after(grammarAccess.getGenerationLanguageAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule ArgumentType
ruleArgumentType
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentTypeAccess().getBYTE_ARRAYEnumLiteralDeclaration()); }
(	'BYTE_ARRAY' 
)
{ after(grammarAccess.getArgumentTypeAccess().getBYTE_ARRAYEnumLiteralDeclaration()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule Type
ruleType
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getAlternatives()); }
(rule__Type__Alternatives)
{ after(grammarAccess.getTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule BitNumbering
ruleBitNumbering
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitNumberingAccess().getAlternatives()); }
(rule__BitNumbering__Alternatives)
{ after(grammarAccess.getBitNumberingAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__DataModel__Alternatives_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataModelAccess().getRepresentationsAssignment_6_0()); }
(rule__DataModel__RepresentationsAssignment_6_0)
{ after(grammarAccess.getDataModelAccess().getRepresentationsAssignment_6_0()); }
)

    |(
{ before(grammarAccess.getDataModelAccess().getDatafieldsAssignment_6_1()); }
(rule__DataModel__DatafieldsAssignment_6_1)
{ after(grammarAccess.getDataModelAccess().getDatafieldsAssignment_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Options__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionsAccess().getGroup_1_0()); }
(rule__Options__Group_1_0__0)
{ after(grammarAccess.getOptionsAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getOptionsAccess().getGroup_1_1()); }
(rule__Options__Group_1_1__0)
{ after(grammarAccess.getOptionsAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Representation__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRepresentationAccess().getReprKeyword_0_0()); }

	'repr' 

{ after(grammarAccess.getRepresentationAccess().getReprKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getRepresentationAccess().getRepresentationKeyword_0_1()); }

	'representation' 

{ after(grammarAccess.getRepresentationAccess().getRepresentationKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Representation__Alternatives_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRepresentationAccess().getBytesKeyword_4_0()); }

	'bytes' 

{ after(grammarAccess.getRepresentationAccess().getBytesKeyword_4_0()); }
)

    |(
{ before(grammarAccess.getRepresentationAccess().getByteKeyword_4_1()); }

	'byte' 

{ after(grammarAccess.getRepresentationAccess().getByteKeyword_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Datafield__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDatafieldAccess().getMetadataParserRuleCall_0()); }
	ruleMetadata
{ after(grammarAccess.getDatafieldAccess().getMetadataParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getDatafieldAccess().getDataParserRuleCall_1()); }
	ruleData
{ after(grammarAccess.getDatafieldAccess().getDataParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getDatafieldAccess().getDatastructureParserRuleCall_2()); }
	ruleDatastructure
{ after(grammarAccess.getDatafieldAccess().getDatastructureParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getDatafieldAccess().getCalculatedParserRuleCall_3()); }
	ruleCalculated
{ after(grammarAccess.getDatafieldAccess().getCalculatedParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Calculated__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCalculatedAccess().getCalculateKeyword_0_0()); }

	'calculate' 

{ after(grammarAccess.getCalculatedAccess().getCalculateKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getCalculatedAccess().getCalculatedKeyword_0_1()); }

	'calculated' 

{ after(grammarAccess.getCalculatedAccess().getCalculatedKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataConstraint__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataConstraintAccess().getDataRangeParserRuleCall_0()); }
	ruleDataRange
{ after(grammarAccess.getDataConstraintAccess().getDataRangeParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getDataConstraintAccess().getDataAdaptionParserRuleCall_1()); }
	ruleDataAdaption
{ after(grammarAccess.getDataConstraintAccess().getDataAdaptionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GenerationLanguage__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGenerationLanguageAccess().getJAVAEnumLiteralDeclaration_0()); }
(	'JAVA' 
)
{ after(grammarAccess.getGenerationLanguageAccess().getJAVAEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getGenerationLanguageAccess().getCPPEnumLiteralDeclaration_1()); }
(	'CPP' 
)
{ after(grammarAccess.getGenerationLanguageAccess().getCPPEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getGenerationLanguageAccess().getCEnumLiteralDeclaration_2()); }
(	'C' 
)
{ after(grammarAccess.getGenerationLanguageAccess().getCEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getGenerationLanguageAccess().getCSHARPEnumLiteralDeclaration_3()); }
(	'CSHARP' 
)
{ after(grammarAccess.getGenerationLanguageAccess().getCSHARPEnumLiteralDeclaration_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getBOOLEnumLiteralDeclaration_0()); }
(	'BOOL' 
)
{ after(grammarAccess.getTypeAccess().getBOOLEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getCHAREnumLiteralDeclaration_1()); }
(	'CHAR' 
)
{ after(grammarAccess.getTypeAccess().getCHAREnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getSHORTEnumLiteralDeclaration_2()); }
(	'SHORT' 
)
{ after(grammarAccess.getTypeAccess().getSHORTEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getINTEnumLiteralDeclaration_3()); }
(	'INT' 
)
{ after(grammarAccess.getTypeAccess().getINTEnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getLONGEnumLiteralDeclaration_4()); }
(	'LONG' 
)
{ after(grammarAccess.getTypeAccess().getLONGEnumLiteralDeclaration_4()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getLONGLONGEnumLiteralDeclaration_5()); }
(	'LONGLONG' 
)
{ after(grammarAccess.getTypeAccess().getLONGLONGEnumLiteralDeclaration_5()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getFLOATEnumLiteralDeclaration_6()); }
(	'FLOAT' 
)
{ after(grammarAccess.getTypeAccess().getFLOATEnumLiteralDeclaration_6()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getDOUBLEEnumLiteralDeclaration_7()); }
(	'DOUBLE' 
)
{ after(grammarAccess.getTypeAccess().getDOUBLEEnumLiteralDeclaration_7()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getLONGDOUBLEEnumLiteralDeclaration_8()); }
(	'LONGDOUBLE' 
)
{ after(grammarAccess.getTypeAccess().getLONGDOUBLEEnumLiteralDeclaration_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BitNumbering__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitNumberingAccess().getLSBEnumLiteralDeclaration_0()); }
(	'LSB' 
)
{ after(grammarAccess.getBitNumberingAccess().getLSBEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getBitNumberingAccess().getMSBEnumLiteralDeclaration_1()); }
(	'MSB' 
)
{ after(grammarAccess.getBitNumberingAccess().getMSBEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__DataModel__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataModel__Group__0__Impl
	rule__DataModel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataModel__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataModelAccess().getDatamodelKeyword_0()); }

	'datamodel' 

{ after(grammarAccess.getDataModelAccess().getDatamodelKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataModel__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataModel__Group__1__Impl
	rule__DataModel__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DataModel__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataModelAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getDataModelAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataModel__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataModel__Group__2__Impl
	rule__DataModel__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DataModel__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataModelAccess().getOptionsKeyword_2()); }

	'options' 

{ after(grammarAccess.getDataModelAccess().getOptionsKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataModel__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataModel__Group__3__Impl
	rule__DataModel__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DataModel__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataModelAccess().getLeftCurlyBracketKeyword_3()); }

	'{' 

{ after(grammarAccess.getDataModelAccess().getLeftCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataModel__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataModel__Group__4__Impl
	rule__DataModel__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__DataModel__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataModelAccess().getOptionsAssignment_4()); }
(rule__DataModel__OptionsAssignment_4)
{ after(grammarAccess.getDataModelAccess().getOptionsAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataModel__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataModel__Group__5__Impl
	rule__DataModel__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__DataModel__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataModelAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getDataModelAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataModel__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataModel__Group__6__Impl
	rule__DataModel__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__DataModel__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataModelAccess().getAlternatives_6()); }
(rule__DataModel__Alternatives_6)*
{ after(grammarAccess.getDataModelAccess().getAlternatives_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataModel__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataModel__Group__7__Impl
	rule__DataModel__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__DataModel__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataModelAccess().getTransmitKeyword_7()); }

	'transmit' 

{ after(grammarAccess.getDataModelAccess().getTransmitKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataModel__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataModel__Group__8__Impl
	rule__DataModel__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__DataModel__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataModelAccess().getTransmitAssignment_8()); }
(rule__DataModel__TransmitAssignment_8)
{ after(grammarAccess.getDataModelAccess().getTransmitAssignment_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataModel__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataModel__Group__9__Impl
	rule__DataModel__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__DataModel__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataModelAccess().getGroup_9()); }
(rule__DataModel__Group_9__0)*
{ after(grammarAccess.getDataModelAccess().getGroup_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataModel__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataModel__Group__10__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataModel__Group__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataModelAccess().getRightCurlyBracketKeyword_10()); }

	'}' 

{ after(grammarAccess.getDataModelAccess().getRightCurlyBracketKeyword_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}
























rule__DataModel__Group_9__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataModel__Group_9__0__Impl
	rule__DataModel__Group_9__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataModel__Group_9__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataModelAccess().getCommaKeyword_9_0()); }

	',' 

{ after(grammarAccess.getDataModelAccess().getCommaKeyword_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataModel__Group_9__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataModel__Group_9__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataModel__Group_9__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataModelAccess().getTransmitAssignment_9_1()); }
(rule__DataModel__TransmitAssignment_9_1)
{ after(grammarAccess.getDataModelAccess().getTransmitAssignment_9_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Options__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Options__Group__0__Impl
	rule__Options__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Options__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionsAccess().getOptionsAction_0()); }
(

)
{ after(grammarAccess.getOptionsAccess().getOptionsAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Options__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Options__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Options__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionsAccess().getAlternatives_1()); }
(rule__Options__Alternatives_1)*
{ after(grammarAccess.getOptionsAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Options__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Options__Group_1_0__0__Impl
	rule__Options__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Options__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionsAccess().getSensorKeyword_1_0_0()); }

	'sensor' 

{ after(grammarAccess.getOptionsAccess().getSensorKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Options__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Options__Group_1_0__1__Impl
	rule__Options__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Options__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionsAccess().getLanguageKeyword_1_0_1()); }

	'language' 

{ after(grammarAccess.getOptionsAccess().getLanguageKeyword_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Options__Group_1_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Options__Group_1_0__2__Impl
	rule__Options__Group_1_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Options__Group_1_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionsAccess().getColonKeyword_1_0_2()); }

	':' 

{ after(grammarAccess.getOptionsAccess().getColonKeyword_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Options__Group_1_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Options__Group_1_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Options__Group_1_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionsAccess().getSensorLanguageAssignment_1_0_3()); }
(rule__Options__SensorLanguageAssignment_1_0_3)
{ after(grammarAccess.getOptionsAccess().getSensorLanguageAssignment_1_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Options__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Options__Group_1_1__0__Impl
	rule__Options__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Options__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionsAccess().getReceiverKeyword_1_1_0()); }

	'receiver' 

{ after(grammarAccess.getOptionsAccess().getReceiverKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Options__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Options__Group_1_1__1__Impl
	rule__Options__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Options__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionsAccess().getLanguageKeyword_1_1_1()); }

	'language' 

{ after(grammarAccess.getOptionsAccess().getLanguageKeyword_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Options__Group_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Options__Group_1_1__2__Impl
	rule__Options__Group_1_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Options__Group_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionsAccess().getColonKeyword_1_1_2()); }

	':' 

{ after(grammarAccess.getOptionsAccess().getColonKeyword_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Options__Group_1_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Options__Group_1_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Options__Group_1_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionsAccess().getReceiverLanguageAssignment_1_1_3()); }
(rule__Options__ReceiverLanguageAssignment_1_1_3)
{ after(grammarAccess.getOptionsAccess().getReceiverLanguageAssignment_1_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Representation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Representation__Group__0__Impl
	rule__Representation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Representation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRepresentationAccess().getAlternatives_0()); }
(rule__Representation__Alternatives_0)
{ after(grammarAccess.getRepresentationAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Representation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Representation__Group__1__Impl
	rule__Representation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Representation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRepresentationAccess().getNameAssignment_1()); }
(rule__Representation__NameAssignment_1)
{ after(grammarAccess.getRepresentationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Representation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Representation__Group__2__Impl
	rule__Representation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Representation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRepresentationAccess().getIsKeyword_2()); }

	'is' 

{ after(grammarAccess.getRepresentationAccess().getIsKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Representation__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Representation__Group__3__Impl
	rule__Representation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Representation__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRepresentationAccess().getByteCountAssignment_3()); }
(rule__Representation__ByteCountAssignment_3)
{ after(grammarAccess.getRepresentationAccess().getByteCountAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Representation__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Representation__Group__4__Impl
	rule__Representation__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Representation__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRepresentationAccess().getAlternatives_4()); }
(rule__Representation__Alternatives_4)
{ after(grammarAccess.getRepresentationAccess().getAlternatives_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Representation__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Representation__Group__5__Impl
	rule__Representation__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Representation__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRepresentationAccess().getInKeyword_5()); }

	'in' 

{ after(grammarAccess.getRepresentationAccess().getInKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Representation__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Representation__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Representation__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRepresentationAccess().getTypeAssignment_6()); }
(rule__Representation__TypeAssignment_6)
{ after(grammarAccess.getRepresentationAccess().getTypeAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Calculated__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Calculated__Group__0__Impl
	rule__Calculated__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Calculated__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCalculatedAccess().getAlternatives_0()); }
(rule__Calculated__Alternatives_0)
{ after(grammarAccess.getCalculatedAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Calculated__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Calculated__Group__1__Impl
	rule__Calculated__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Calculated__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCalculatedAccess().getNameAssignment_1()); }
(rule__Calculated__NameAssignment_1)
{ after(grammarAccess.getCalculatedAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Calculated__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Calculated__Group__2__Impl
	rule__Calculated__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Calculated__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCalculatedAccess().getAsKeyword_2()); }

	'as' 

{ after(grammarAccess.getCalculatedAccess().getAsKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Calculated__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Calculated__Group__3__Impl
	rule__Calculated__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Calculated__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCalculatedAccess().getRepresentationAssignment_3()); }
(rule__Calculated__RepresentationAssignment_3)
{ after(grammarAccess.getCalculatedAccess().getRepresentationAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Calculated__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Calculated__Group__4__Impl
	rule__Calculated__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Calculated__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCalculatedAccess().getByKeyword_4()); }

	'by' 

{ after(grammarAccess.getCalculatedAccess().getByKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Calculated__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Calculated__Group__5__Impl
	rule__Calculated__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Calculated__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCalculatedAccess().getMethodNameAssignment_5()); }
(rule__Calculated__MethodNameAssignment_5)
{ after(grammarAccess.getCalculatedAccess().getMethodNameAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Calculated__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Calculated__Group__6__Impl
	rule__Calculated__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Calculated__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCalculatedAccess().getGroup_6()); }
(rule__Calculated__Group_6__0)?
{ after(grammarAccess.getCalculatedAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Calculated__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Calculated__Group__7__Impl
	rule__Calculated__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Calculated__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCalculatedAccess().getWithKeyword_7()); }

	'with' 

{ after(grammarAccess.getCalculatedAccess().getWithKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Calculated__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Calculated__Group__8__Impl
	rule__Calculated__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Calculated__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCalculatedAccess().getParameterAssignment_8()); }
(rule__Calculated__ParameterAssignment_8)
{ after(grammarAccess.getCalculatedAccess().getParameterAssignment_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Calculated__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Calculated__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Calculated__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCalculatedAccess().getGroup_9()); }
(rule__Calculated__Group_9__0)*
{ after(grammarAccess.getCalculatedAccess().getGroup_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}






















rule__Calculated__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Calculated__Group_6__0__Impl
	rule__Calculated__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Calculated__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCalculatedAccess().getCommaKeyword_6_0()); }

	',' 

{ after(grammarAccess.getCalculatedAccess().getCommaKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Calculated__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Calculated__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Calculated__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCalculatedAccess().getMethodNameOutAssignment_6_1()); }
(rule__Calculated__MethodNameOutAssignment_6_1)
{ after(grammarAccess.getCalculatedAccess().getMethodNameOutAssignment_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Calculated__Group_9__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Calculated__Group_9__0__Impl
	rule__Calculated__Group_9__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Calculated__Group_9__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCalculatedAccess().getCommaKeyword_9_0()); }

	',' 

{ after(grammarAccess.getCalculatedAccess().getCommaKeyword_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Calculated__Group_9__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Calculated__Group_9__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Calculated__Group_9__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCalculatedAccess().getParameterAssignment_9_1()); }
(rule__Calculated__ParameterAssignment_9_1)
{ after(grammarAccess.getCalculatedAccess().getParameterAssignment_9_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Parameter__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group__0__Impl
	rule__Parameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getLeftParenthesisKeyword_0()); }

	'(' 

{ after(grammarAccess.getParameterAccess().getLeftParenthesisKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group__1__Impl
	rule__Parameter__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getDatafieldAssignment_1()); }
(rule__Parameter__DatafieldAssignment_1)
{ after(grammarAccess.getParameterAccess().getDatafieldAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group__2__Impl
	rule__Parameter__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getGroup_2()); }
(rule__Parameter__Group_2__0)?
{ after(grammarAccess.getParameterAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getParameterAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Parameter__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group_2__0__Impl
	rule__Parameter__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getAsKeyword_2_0()); }

	'as' 

{ after(grammarAccess.getParameterAccess().getAsKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getArgumentTypeAssignment_2_1()); }
(rule__Parameter__ArgumentTypeAssignment_2_1)
{ after(grammarAccess.getParameterAccess().getArgumentTypeAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Datastructure__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Datastructure__Group__0__Impl
	rule__Datastructure__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Datastructure__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDatastructureAccess().getStructureKeyword_0()); }

	'structure' 

{ after(grammarAccess.getDatastructureAccess().getStructureKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Datastructure__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Datastructure__Group__1__Impl
	rule__Datastructure__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Datastructure__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDatastructureAccess().getNameAssignment_1()); }
(rule__Datastructure__NameAssignment_1)
{ after(grammarAccess.getDatastructureAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Datastructure__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Datastructure__Group__2__Impl
	rule__Datastructure__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Datastructure__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDatastructureAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getDatastructureAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Datastructure__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Datastructure__Group__3__Impl
	rule__Datastructure__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Datastructure__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDatastructureAccess().getDatafieldsAssignment_3()); }
(rule__Datastructure__DatafieldsAssignment_3)*
{ after(grammarAccess.getDatastructureAccess().getDatafieldsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Datastructure__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Datastructure__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Datastructure__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDatastructureAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getDatastructureAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Data__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Data__Group__0__Impl
	rule__Data__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Data__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataAccess().getDataKeyword_0()); }

	'data' 

{ after(grammarAccess.getDataAccess().getDataKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Data__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Data__Group__1__Impl
	rule__Data__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Data__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataAccess().getOfKeyword_1()); }

	'of' 

{ after(grammarAccess.getDataAccess().getOfKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Data__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Data__Group__2__Impl
	rule__Data__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Data__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataAccess().getNameAssignment_2()); }
(rule__Data__NameAssignment_2)
{ after(grammarAccess.getDataAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Data__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Data__Group__3__Impl
	rule__Data__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Data__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataAccess().getGroup_3()); }
(rule__Data__Group_3__0)?
{ after(grammarAccess.getDataAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Data__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Data__Group__4__Impl
	rule__Data__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Data__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataAccess().getAsKeyword_4()); }

	'as' 

{ after(grammarAccess.getDataAccess().getAsKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Data__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Data__Group__5__Impl
	rule__Data__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Data__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataAccess().getRepresentationAssignment_5()); }
(rule__Data__RepresentationAssignment_5)
{ after(grammarAccess.getDataAccess().getRepresentationAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Data__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Data__Group__6__Impl
	rule__Data__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Data__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataAccess().getGroup_6()); }
(rule__Data__Group_6__0)?
{ after(grammarAccess.getDataAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Data__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Data__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Data__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataAccess().getConstraintsAssignment_7()); }
(rule__Data__ConstraintsAssignment_7)*
{ after(grammarAccess.getDataAccess().getConstraintsAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__Data__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Data__Group_3__0__Impl
	rule__Data__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Data__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataAccess().getInKeyword_3_0()); }

	'in' 

{ after(grammarAccess.getDataAccess().getInKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Data__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Data__Group_3__1__Impl
	rule__Data__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Data__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataAccess().getScaleAssignment_3_1()); }
(rule__Data__ScaleAssignment_3_1)?
{ after(grammarAccess.getDataAccess().getScaleAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Data__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Data__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Data__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataAccess().getUnitAssignment_3_2()); }
(rule__Data__UnitAssignment_3_2)
{ after(grammarAccess.getDataAccess().getUnitAssignment_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Data__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Data__Group_6__0__Impl
	rule__Data__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Data__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataAccess().getWithKeyword_6_0()); }

	'with' 

{ after(grammarAccess.getDataAccess().getWithKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Data__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Data__Group_6__1__Impl
	rule__Data__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Data__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataAccess().getBitKeyword_6_1()); }

	'bit' 

{ after(grammarAccess.getDataAccess().getBitKeyword_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Data__Group_6__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Data__Group_6__2__Impl
	rule__Data__Group_6__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Data__Group_6__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataAccess().getNumberingKeyword_6_2()); }

	'numbering' 

{ after(grammarAccess.getDataAccess().getNumberingKeyword_6_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Data__Group_6__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Data__Group_6__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Data__Group_6__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataAccess().getBitNumberingAssignment_6_3()); }
(rule__Data__BitNumberingAssignment_6_3)
{ after(grammarAccess.getDataAccess().getBitNumberingAssignment_6_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__DataRange__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataRange__Group__0__Impl
	rule__DataRange__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataRange__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataRangeAccess().getFromKeyword_0()); }

	'from' 

{ after(grammarAccess.getDataRangeAccess().getFromKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataRange__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataRange__Group__1__Impl
	rule__DataRange__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DataRange__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataRangeAccess().getLowerBoundAssignment_1()); }
(rule__DataRange__LowerBoundAssignment_1)
{ after(grammarAccess.getDataRangeAccess().getLowerBoundAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataRange__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataRange__Group__2__Impl
	rule__DataRange__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DataRange__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataRangeAccess().getToKeyword_2()); }

	'to' 

{ after(grammarAccess.getDataRangeAccess().getToKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataRange__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataRange__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataRange__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataRangeAccess().getUpperBoundAssignment_3()); }
(rule__DataRange__UpperBoundAssignment_3)
{ after(grammarAccess.getDataRangeAccess().getUpperBoundAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__DataAdaption__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataAdaption__Group__0__Impl
	rule__DataAdaption__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataAdaption__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataAdaptionAccess().getWithKeyword_0()); }

	'with' 

{ after(grammarAccess.getDataAdaptionAccess().getWithKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataAdaption__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataAdaption__Group__1__Impl
	rule__DataAdaption__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DataAdaption__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataAdaptionAccess().getScalingFactorKeyword_1()); }

	'scaling factor' 

{ after(grammarAccess.getDataAdaptionAccess().getScalingFactorKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataAdaption__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataAdaption__Group__2__Impl
	rule__DataAdaption__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DataAdaption__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataAdaptionAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getDataAdaptionAccess().getColonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataAdaption__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataAdaption__Group__3__Impl
	rule__DataAdaption__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DataAdaption__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataAdaptionAccess().getScalingFactorAssignment_3()); }
(rule__DataAdaption__ScalingFactorAssignment_3)
{ after(grammarAccess.getDataAdaptionAccess().getScalingFactorAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataAdaption__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataAdaption__Group__4__Impl
	rule__DataAdaption__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__DataAdaption__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataAdaptionAccess().getAndKeyword_4()); }

	'and' 

{ after(grammarAccess.getDataAdaptionAccess().getAndKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataAdaption__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataAdaption__Group__5__Impl
	rule__DataAdaption__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__DataAdaption__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataAdaptionAccess().getOffsetKeyword_5()); }

	'offset' 

{ after(grammarAccess.getDataAdaptionAccess().getOffsetKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataAdaption__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataAdaption__Group__6__Impl
	rule__DataAdaption__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__DataAdaption__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataAdaptionAccess().getColonKeyword_6()); }

	':' 

{ after(grammarAccess.getDataAdaptionAccess().getColonKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataAdaption__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataAdaption__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataAdaption__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataAdaptionAccess().getOffsetAssignment_7()); }
(rule__DataAdaption__OffsetAssignment_7)
{ after(grammarAccess.getDataAdaptionAccess().getOffsetAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__Bound__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Bound__Group__0__Impl
	rule__Bound__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Bound__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBoundAccess().getValueAssignment_0()); }
(rule__Bound__ValueAssignment_0)
{ after(grammarAccess.getBoundAccess().getValueAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Bound__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Bound__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Bound__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBoundAccess().getUnitAssignment_1()); }
(rule__Bound__UnitAssignment_1)
{ after(grammarAccess.getBoundAccess().getUnitAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Metadata__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Metadata__Group__0__Impl
	rule__Metadata__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Metadata__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetadataAccess().getPrimitiveKeyword_0()); }

	'primitive' 

{ after(grammarAccess.getMetadataAccess().getPrimitiveKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Metadata__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Metadata__Group__1__Impl
	rule__Metadata__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Metadata__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetadataAccess().getTypeAssignment_1()); }
(rule__Metadata__TypeAssignment_1)
{ after(grammarAccess.getMetadataAccess().getTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Metadata__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Metadata__Group__2__Impl
	rule__Metadata__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Metadata__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetadataAccess().getNameAssignment_2()); }
(rule__Metadata__NameAssignment_2)
{ after(grammarAccess.getMetadataAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Metadata__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Metadata__Group__3__Impl
	rule__Metadata__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Metadata__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetadataAccess().getAsKeyword_3()); }

	'as' 

{ after(grammarAccess.getMetadataAccess().getAsKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Metadata__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Metadata__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Metadata__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetadataAccess().getRepresentationAssignment_4()); }
(rule__Metadata__RepresentationAssignment_4)
{ after(grammarAccess.getMetadataAccess().getRepresentationAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__DOUBLE__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DOUBLE__Group__0__Impl
	rule__DOUBLE__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDOUBLEAccess().getINTTerminalRuleCall_0()); }
	RULE_INT
{ after(grammarAccess.getDOUBLEAccess().getINTTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DOUBLE__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DOUBLE__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDOUBLEAccess().getGroup_1()); }
(rule__DOUBLE__Group_1__0)?
{ after(grammarAccess.getDOUBLEAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DOUBLE__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DOUBLE__Group_1__0__Impl
	rule__DOUBLE__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDOUBLEAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getDOUBLEAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DOUBLE__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DOUBLE__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDOUBLEAccess().getINTTerminalRuleCall_1_1()); }
	RULE_INT
{ after(grammarAccess.getDOUBLEAccess().getINTTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__DataModel__OptionsAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataModelAccess().getOptionsOptionsParserRuleCall_4_0()); }
	ruleOptions{ after(grammarAccess.getDataModelAccess().getOptionsOptionsParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataModel__RepresentationsAssignment_6_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataModelAccess().getRepresentationsRepresentationParserRuleCall_6_0_0()); }
	ruleRepresentation{ after(grammarAccess.getDataModelAccess().getRepresentationsRepresentationParserRuleCall_6_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataModel__DatafieldsAssignment_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataModelAccess().getDatafieldsDatafieldParserRuleCall_6_1_0()); }
	ruleDatafield{ after(grammarAccess.getDataModelAccess().getDatafieldsDatafieldParserRuleCall_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataModel__TransmitAssignment_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataModelAccess().getTransmitDatafieldCrossReference_8_0()); }
(
{ before(grammarAccess.getDataModelAccess().getTransmitDatafieldIDTerminalRuleCall_8_0_1()); }
	RULE_ID{ after(grammarAccess.getDataModelAccess().getTransmitDatafieldIDTerminalRuleCall_8_0_1()); }
)
{ after(grammarAccess.getDataModelAccess().getTransmitDatafieldCrossReference_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataModel__TransmitAssignment_9_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataModelAccess().getTransmitDatafieldCrossReference_9_1_0()); }
(
{ before(grammarAccess.getDataModelAccess().getTransmitDatafieldIDTerminalRuleCall_9_1_0_1()); }
	RULE_ID{ after(grammarAccess.getDataModelAccess().getTransmitDatafieldIDTerminalRuleCall_9_1_0_1()); }
)
{ after(grammarAccess.getDataModelAccess().getTransmitDatafieldCrossReference_9_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Options__SensorLanguageAssignment_1_0_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionsAccess().getSensorLanguageGenerationLanguageEnumRuleCall_1_0_3_0()); }
	ruleGenerationLanguage{ after(grammarAccess.getOptionsAccess().getSensorLanguageGenerationLanguageEnumRuleCall_1_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Options__ReceiverLanguageAssignment_1_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionsAccess().getReceiverLanguageGenerationLanguageEnumRuleCall_1_1_3_0()); }
	ruleGenerationLanguage{ after(grammarAccess.getOptionsAccess().getReceiverLanguageGenerationLanguageEnumRuleCall_1_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Representation__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRepresentationAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getRepresentationAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Representation__ByteCountAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRepresentationAccess().getByteCountINTTerminalRuleCall_3_0()); }
	RULE_INT{ after(grammarAccess.getRepresentationAccess().getByteCountINTTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Representation__TypeAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRepresentationAccess().getTypeTypeEnumRuleCall_6_0()); }
	ruleType{ after(grammarAccess.getRepresentationAccess().getTypeTypeEnumRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Calculated__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCalculatedAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getCalculatedAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Calculated__RepresentationAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCalculatedAccess().getRepresentationRepresentationCrossReference_3_0()); }
(
{ before(grammarAccess.getCalculatedAccess().getRepresentationRepresentationIDTerminalRuleCall_3_0_1()); }
	RULE_ID{ after(grammarAccess.getCalculatedAccess().getRepresentationRepresentationIDTerminalRuleCall_3_0_1()); }
)
{ after(grammarAccess.getCalculatedAccess().getRepresentationRepresentationCrossReference_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Calculated__MethodNameAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCalculatedAccess().getMethodNameIDTerminalRuleCall_5_0()); }
	RULE_ID{ after(grammarAccess.getCalculatedAccess().getMethodNameIDTerminalRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Calculated__MethodNameOutAssignment_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCalculatedAccess().getMethodNameOutIDTerminalRuleCall_6_1_0()); }
	RULE_ID{ after(grammarAccess.getCalculatedAccess().getMethodNameOutIDTerminalRuleCall_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Calculated__ParameterAssignment_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCalculatedAccess().getParameterParameterParserRuleCall_8_0()); }
	ruleParameter{ after(grammarAccess.getCalculatedAccess().getParameterParameterParserRuleCall_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Calculated__ParameterAssignment_9_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCalculatedAccess().getParameterParameterParserRuleCall_9_1_0()); }
	ruleParameter{ after(grammarAccess.getCalculatedAccess().getParameterParameterParserRuleCall_9_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__DatafieldAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getDatafieldDatafieldCrossReference_1_0()); }
(
{ before(grammarAccess.getParameterAccess().getDatafieldDatafieldIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getParameterAccess().getDatafieldDatafieldIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getParameterAccess().getDatafieldDatafieldCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__ArgumentTypeAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getArgumentTypeArgumentTypeEnumRuleCall_2_1_0()); }
	ruleArgumentType{ after(grammarAccess.getParameterAccess().getArgumentTypeArgumentTypeEnumRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Datastructure__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDatastructureAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getDatastructureAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Datastructure__DatafieldsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDatastructureAccess().getDatafieldsDatafieldParserRuleCall_3_0()); }
	ruleDatafield{ after(grammarAccess.getDatastructureAccess().getDatafieldsDatafieldParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Data__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getDataAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Data__ScaleAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataAccess().getScaleDOUBLEParserRuleCall_3_1_0()); }
	ruleDOUBLE{ after(grammarAccess.getDataAccess().getScaleDOUBLEParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Data__UnitAssignment_3_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataAccess().getUnitSTRINGTerminalRuleCall_3_2_0()); }
	RULE_STRING{ after(grammarAccess.getDataAccess().getUnitSTRINGTerminalRuleCall_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Data__RepresentationAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataAccess().getRepresentationRepresentationCrossReference_5_0()); }
(
{ before(grammarAccess.getDataAccess().getRepresentationRepresentationIDTerminalRuleCall_5_0_1()); }
	RULE_ID{ after(grammarAccess.getDataAccess().getRepresentationRepresentationIDTerminalRuleCall_5_0_1()); }
)
{ after(grammarAccess.getDataAccess().getRepresentationRepresentationCrossReference_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Data__BitNumberingAssignment_6_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataAccess().getBitNumberingBitNumberingEnumRuleCall_6_3_0()); }
	ruleBitNumbering{ after(grammarAccess.getDataAccess().getBitNumberingBitNumberingEnumRuleCall_6_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Data__ConstraintsAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataAccess().getConstraintsDataConstraintParserRuleCall_7_0()); }
	ruleDataConstraint{ after(grammarAccess.getDataAccess().getConstraintsDataConstraintParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataRange__LowerBoundAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataRangeAccess().getLowerBoundBoundParserRuleCall_1_0()); }
	ruleBound{ after(grammarAccess.getDataRangeAccess().getLowerBoundBoundParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataRange__UpperBoundAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataRangeAccess().getUpperBoundBoundParserRuleCall_3_0()); }
	ruleBound{ after(grammarAccess.getDataRangeAccess().getUpperBoundBoundParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataAdaption__ScalingFactorAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataAdaptionAccess().getScalingFactorDOUBLEParserRuleCall_3_0()); }
	ruleDOUBLE{ after(grammarAccess.getDataAdaptionAccess().getScalingFactorDOUBLEParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataAdaption__OffsetAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataAdaptionAccess().getOffsetDOUBLEParserRuleCall_7_0()); }
	ruleDOUBLE{ after(grammarAccess.getDataAdaptionAccess().getOffsetDOUBLEParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Bound__ValueAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBoundAccess().getValueDOUBLEParserRuleCall_0_0()); }
	ruleDOUBLE{ after(grammarAccess.getBoundAccess().getValueDOUBLEParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Bound__UnitAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBoundAccess().getUnitSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getBoundAccess().getUnitSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Metadata__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetadataAccess().getTypeTypeEnumRuleCall_1_0()); }
	ruleType{ after(grammarAccess.getMetadataAccess().getTypeTypeEnumRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Metadata__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetadataAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getMetadataAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Metadata__RepresentationAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetadataAccess().getRepresentationRepresentationCrossReference_4_0()); }
(
{ before(grammarAccess.getMetadataAccess().getRepresentationRepresentationIDTerminalRuleCall_4_0_1()); }
	RULE_ID{ after(grammarAccess.getMetadataAccess().getRepresentationRepresentationIDTerminalRuleCall_4_0_1()); }
)
{ after(grammarAccess.getMetadataAccess().getRepresentationRepresentationCrossReference_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


