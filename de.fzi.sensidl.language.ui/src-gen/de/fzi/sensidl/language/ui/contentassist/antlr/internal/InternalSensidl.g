/*
* generated by Xtext
*/
grammar InternalSensidl;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package de.fzi.sensidl.language.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package de.fzi.sensidl.language.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import de.fzi.sensidl.language.services.SensidlGrammarAccess;

}

@parser::members {
 
 	private SensidlGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(SensidlGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleDataModel
entryRuleDataModel 
:
{ before(grammarAccess.getDataModelRule()); }
	 ruleDataModel
{ after(grammarAccess.getDataModelRule()); } 
	 EOF 
;

// Rule DataModel
ruleDataModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDataModelAccess().getGroup()); }
(rule__DataModel__Group__0)
{ after(grammarAccess.getDataModelAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOptions
entryRuleOptions 
:
{ before(grammarAccess.getOptionsRule()); }
	 ruleOptions
{ after(grammarAccess.getOptionsRule()); } 
	 EOF 
;

// Rule Options
ruleOptions
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOptionsAccess().getGroup()); }
(rule__Options__Group__0)
{ after(grammarAccess.getOptionsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTransmission
entryRuleTransmission 
:
{ before(grammarAccess.getTransmissionRule()); }
	 ruleTransmission
{ after(grammarAccess.getTransmissionRule()); } 
	 EOF 
;

// Rule Transmission
ruleTransmission
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTransmissionAccess().getAlternatives()); }
(rule__Transmission__Alternatives)
{ after(grammarAccess.getTransmissionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePush
entryRulePush 
:
{ before(grammarAccess.getPushRule()); }
	 rulePush
{ after(grammarAccess.getPushRule()); } 
	 EOF 
;

// Rule Push
rulePush
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPushAccess().getGroup()); }
(rule__Push__Group__0)
{ after(grammarAccess.getPushAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePull
entryRulePull 
:
{ before(grammarAccess.getPullRule()); }
	 rulePull
{ after(grammarAccess.getPullRule()); } 
	 EOF 
;

// Rule Pull
rulePull
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPullAccess().getAlternatives()); }
(rule__Pull__Alternatives)
{ after(grammarAccess.getPullAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTimeDivisionMultiplexing
entryRuleTimeDivisionMultiplexing 
:
{ before(grammarAccess.getTimeDivisionMultiplexingRule()); }
	 ruleTimeDivisionMultiplexing
{ after(grammarAccess.getTimeDivisionMultiplexingRule()); } 
	 EOF 
;

// Rule TimeDivisionMultiplexing
ruleTimeDivisionMultiplexing
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTimeDivisionMultiplexingAccess().getGroup()); }
(rule__TimeDivisionMultiplexing__Group__0)
{ after(grammarAccess.getTimeDivisionMultiplexingAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRepresentation
entryRuleRepresentation 
:
{ before(grammarAccess.getRepresentationRule()); }
	 ruleRepresentation
{ after(grammarAccess.getRepresentationRule()); } 
	 EOF 
;

// Rule Representation
ruleRepresentation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRepresentationAccess().getGroup()); }
(rule__Representation__Group__0)
{ after(grammarAccess.getRepresentationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInterpretation
entryRuleInterpretation 
:
{ before(grammarAccess.getInterpretationRule()); }
	 ruleInterpretation
{ after(grammarAccess.getInterpretationRule()); } 
	 EOF 
;

// Rule Interpretation
ruleInterpretation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInterpretationAccess().getAlternatives()); }
(rule__Interpretation__Alternatives)
{ after(grammarAccess.getInterpretationAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCalculated
entryRuleCalculated 
:
{ before(grammarAccess.getCalculatedRule()); }
	 ruleCalculated
{ after(grammarAccess.getCalculatedRule()); } 
	 EOF 
;

// Rule Calculated
ruleCalculated
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCalculatedAccess().getGroup()); }
(rule__Calculated__Group__0)
{ after(grammarAccess.getCalculatedAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParameter
entryRuleParameter 
:
{ before(grammarAccess.getParameterRule()); }
	 ruleParameter
{ after(grammarAccess.getParameterRule()); } 
	 EOF 
;

// Rule Parameter
ruleParameter
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParameterAccess().getGroup()); }
(rule__Parameter__Group__0)
{ after(grammarAccess.getParameterAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInterpretationGroup
entryRuleInterpretationGroup 
:
{ before(grammarAccess.getInterpretationGroupRule()); }
	 ruleInterpretationGroup
{ after(grammarAccess.getInterpretationGroupRule()); } 
	 EOF 
;

// Rule InterpretationGroup
ruleInterpretationGroup
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInterpretationGroupAccess().getGroup()); }
(rule__InterpretationGroup__Group__0)
{ after(grammarAccess.getInterpretationGroupAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMeasurement
entryRuleMeasurement 
:
{ before(grammarAccess.getMeasurementRule()); }
	 ruleMeasurement
{ after(grammarAccess.getMeasurementRule()); } 
	 EOF 
;

// Rule Measurement
ruleMeasurement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMeasurementAccess().getGroup()); }
(rule__Measurement__Group__0)
{ after(grammarAccess.getMeasurementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMeasurementConstraint
entryRuleMeasurementConstraint 
:
{ before(grammarAccess.getMeasurementConstraintRule()); }
	 ruleMeasurementConstraint
{ after(grammarAccess.getMeasurementConstraintRule()); } 
	 EOF 
;

// Rule MeasurementConstraint
ruleMeasurementConstraint
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMeasurementConstraintAccess().getAlternatives()); }
(rule__MeasurementConstraint__Alternatives)
{ after(grammarAccess.getMeasurementConstraintAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMeasurementInRange
entryRuleMeasurementInRange 
:
{ before(grammarAccess.getMeasurementInRangeRule()); }
	 ruleMeasurementInRange
{ after(grammarAccess.getMeasurementInRangeRule()); } 
	 EOF 
;

// Rule MeasurementInRange
ruleMeasurementInRange
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMeasurementInRangeAccess().getGroup()); }
(rule__MeasurementInRange__Group__0)
{ after(grammarAccess.getMeasurementInRangeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMeasurementAdaption
entryRuleMeasurementAdaption 
:
{ before(grammarAccess.getMeasurementAdaptionRule()); }
	 ruleMeasurementAdaption
{ after(grammarAccess.getMeasurementAdaptionRule()); } 
	 EOF 
;

// Rule MeasurementAdaption
ruleMeasurementAdaption
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMeasurementAdaptionAccess().getGroup()); }
(rule__MeasurementAdaption__Group__0)
{ after(grammarAccess.getMeasurementAdaptionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMeasure
entryRuleMeasure 
:
{ before(grammarAccess.getMeasureRule()); }
	 ruleMeasure
{ after(grammarAccess.getMeasureRule()); } 
	 EOF 
;

// Rule Measure
ruleMeasure
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMeasureAccess().getGroup()); }
(rule__Measure__Group__0)
{ after(grammarAccess.getMeasureAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePrimitiveInterpretation
entryRulePrimitiveInterpretation 
:
{ before(grammarAccess.getPrimitiveInterpretationRule()); }
	 rulePrimitiveInterpretation
{ after(grammarAccess.getPrimitiveInterpretationRule()); } 
	 EOF 
;

// Rule PrimitiveInterpretation
rulePrimitiveInterpretation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPrimitiveInterpretationAccess().getGroup()); }
(rule__PrimitiveInterpretation__Group__0)
{ after(grammarAccess.getPrimitiveInterpretationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConstant
entryRuleConstant 
:
{ before(grammarAccess.getConstantRule()); }
	 ruleConstant
{ after(grammarAccess.getConstantRule()); } 
	 EOF 
;

// Rule Constant
ruleConstant
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConstantAccess().getGroup()); }
(rule__Constant__Group__0)
{ after(grammarAccess.getConstantAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDOUBLE
entryRuleDOUBLE 
:
{ before(grammarAccess.getDOUBLERule()); }
	 ruleDOUBLE
{ after(grammarAccess.getDOUBLERule()); } 
	 EOF 
;

// Rule DOUBLE
ruleDOUBLE
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDOUBLEAccess().getGroup()); }
(rule__DOUBLE__Group__0)
{ after(grammarAccess.getDOUBLEAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




// Rule GenerationLanguage
ruleGenerationLanguage
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGenerationLanguageAccess().getAlternatives()); }
(rule__GenerationLanguage__Alternatives)
{ after(grammarAccess.getGenerationLanguageAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule ArgumentType
ruleArgumentType
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentTypeAccess().getBYTE_ARRAYEnumLiteralDeclaration()); }
(	'BYTE_ARRAY' 
)
{ after(grammarAccess.getArgumentTypeAccess().getBYTE_ARRAYEnumLiteralDeclaration()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule Quantity
ruleQuantity
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuantityAccess().getAlternatives()); }
(rule__Quantity__Alternatives)
{ after(grammarAccess.getQuantityAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule Type
ruleType
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getAlternatives()); }
(rule__Type__Alternatives)
{ after(grammarAccess.getTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__DataModel__Alternatives_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataModelAccess().getRepresentationsAssignment_4_0()); }
(rule__DataModel__RepresentationsAssignment_4_0)
{ after(grammarAccess.getDataModelAccess().getRepresentationsAssignment_4_0()); }
)

    |(
{ before(grammarAccess.getDataModelAccess().getInterpretationsAssignment_4_1()); }
(rule__DataModel__InterpretationsAssignment_4_1)
{ after(grammarAccess.getDataModelAccess().getInterpretationsAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Options__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionsAccess().getGroup_1_0()); }
(rule__Options__Group_1_0__0)
{ after(grammarAccess.getOptionsAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getOptionsAccess().getGroup_1_1()); }
(rule__Options__Group_1_1__0)
{ after(grammarAccess.getOptionsAccess().getGroup_1_1()); }
)

    |(
{ before(grammarAccess.getOptionsAccess().getGroup_1_2()); }
(rule__Options__Group_1_2__0)
{ after(grammarAccess.getOptionsAccess().getGroup_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transmission__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransmissionAccess().getPullParserRuleCall_0()); }
	rulePull
{ after(grammarAccess.getTransmissionAccess().getPullParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getTransmissionAccess().getPushParserRuleCall_1()); }
	rulePush
{ after(grammarAccess.getTransmissionAccess().getPushParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Pull__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPullAccess().getTimeDivisionMultiplexingParserRuleCall_0()); }
	ruleTimeDivisionMultiplexing
{ after(grammarAccess.getPullAccess().getTimeDivisionMultiplexingParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getPullAccess().getGroup_1()); }
(rule__Pull__Group_1__0)
{ after(grammarAccess.getPullAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Representation__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRepresentationAccess().getReprKeyword_0_0()); }

	'repr' 

{ after(grammarAccess.getRepresentationAccess().getReprKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getRepresentationAccess().getRepresentationKeyword_0_1()); }

	'representation' 

{ after(grammarAccess.getRepresentationAccess().getRepresentationKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Representation__Alternatives_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRepresentationAccess().getBytesKeyword_6_0()); }

	'bytes' 

{ after(grammarAccess.getRepresentationAccess().getBytesKeyword_6_0()); }
)

    |(
{ before(grammarAccess.getRepresentationAccess().getByteKeyword_6_1()); }

	'byte' 

{ after(grammarAccess.getRepresentationAccess().getByteKeyword_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Interpretation__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterpretationAccess().getConstantParserRuleCall_0()); }
	ruleConstant
{ after(grammarAccess.getInterpretationAccess().getConstantParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getInterpretationAccess().getPrimitiveInterpretationParserRuleCall_1()); }
	rulePrimitiveInterpretation
{ after(grammarAccess.getInterpretationAccess().getPrimitiveInterpretationParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getInterpretationAccess().getMeasurementParserRuleCall_2()); }
	ruleMeasurement
{ after(grammarAccess.getInterpretationAccess().getMeasurementParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getInterpretationAccess().getInterpretationGroupParserRuleCall_3()); }
	ruleInterpretationGroup
{ after(grammarAccess.getInterpretationAccess().getInterpretationGroupParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getInterpretationAccess().getCalculatedParserRuleCall_4()); }
	ruleCalculated
{ after(grammarAccess.getInterpretationAccess().getCalculatedParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Calculated__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCalculatedAccess().getCalculateKeyword_0_0()); }

	'calculate' 

{ after(grammarAccess.getCalculatedAccess().getCalculateKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getCalculatedAccess().getCalculatedKeyword_0_1()); }

	'calculated' 

{ after(grammarAccess.getCalculatedAccess().getCalculatedKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MeasurementConstraint__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMeasurementConstraintAccess().getMeasurementInRangeParserRuleCall_0()); }
	ruleMeasurementInRange
{ after(grammarAccess.getMeasurementConstraintAccess().getMeasurementInRangeParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getMeasurementConstraintAccess().getMeasurementAdaptionParserRuleCall_1()); }
	ruleMeasurementAdaption
{ after(grammarAccess.getMeasurementConstraintAccess().getMeasurementAdaptionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GenerationLanguage__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGenerationLanguageAccess().getJAVAEnumLiteralDeclaration_0()); }
(	'JAVA' 
)
{ after(grammarAccess.getGenerationLanguageAccess().getJAVAEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getGenerationLanguageAccess().getCPPEnumLiteralDeclaration_1()); }
(	'CPP' 
)
{ after(grammarAccess.getGenerationLanguageAccess().getCPPEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getGenerationLanguageAccess().getCEnumLiteralDeclaration_2()); }
(	'C' 
)
{ after(grammarAccess.getGenerationLanguageAccess().getCEnumLiteralDeclaration_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Quantity__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuantityAccess().getFLOWEnumLiteralDeclaration_0()); }
(	'FLOW' 
)
{ after(grammarAccess.getQuantityAccess().getFLOWEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getQuantityAccess().getTEMPERATUREEnumLiteralDeclaration_1()); }
(	'TEMPERATURE' 
)
{ after(grammarAccess.getQuantityAccess().getTEMPERATUREEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getQuantityAccess().getVOLUMEEnumLiteralDeclaration_2()); }
(	'VOLUME' 
)
{ after(grammarAccess.getQuantityAccess().getVOLUMEEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getQuantityAccess().getDURATIONEnumLiteralDeclaration_3()); }
(	'DURATION' 
)
{ after(grammarAccess.getQuantityAccess().getDURATIONEnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getQuantityAccess().getPRESSUREEnumLiteralDeclaration_4()); }
(	'PRESSURE' 
)
{ after(grammarAccess.getQuantityAccess().getPRESSUREEnumLiteralDeclaration_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getBYTEEnumLiteralDeclaration_0()); }
(	'BYTE' 
)
{ after(grammarAccess.getTypeAccess().getBYTEEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getSHORTEnumLiteralDeclaration_1()); }
(	'SHORT' 
)
{ after(grammarAccess.getTypeAccess().getSHORTEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getINTEnumLiteralDeclaration_2()); }
(	'INT' 
)
{ after(grammarAccess.getTypeAccess().getINTEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getLONGEnumLiteralDeclaration_3()); }
(	'LONG' 
)
{ after(grammarAccess.getTypeAccess().getLONGEnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getFLOATEnumLiteralDeclaration_4()); }
(	'FLOAT' 
)
{ after(grammarAccess.getTypeAccess().getFLOATEnumLiteralDeclaration_4()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getDOUBLEEnumLiteralDeclaration_5()); }
(	'DOUBLE' 
)
{ after(grammarAccess.getTypeAccess().getDOUBLEEnumLiteralDeclaration_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__DataModel__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataModel__Group__0__Impl
	rule__DataModel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataModel__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataModelAccess().getOptionsKeyword_0()); }

	'options' 

{ after(grammarAccess.getDataModelAccess().getOptionsKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataModel__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataModel__Group__1__Impl
	rule__DataModel__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DataModel__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataModelAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getDataModelAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataModel__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataModel__Group__2__Impl
	rule__DataModel__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DataModel__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataModelAccess().getOptionsAssignment_2()); }
(rule__DataModel__OptionsAssignment_2)
{ after(grammarAccess.getDataModelAccess().getOptionsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataModel__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataModel__Group__3__Impl
	rule__DataModel__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DataModel__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataModelAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getDataModelAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataModel__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataModel__Group__4__Impl
	rule__DataModel__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__DataModel__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataModelAccess().getAlternatives_4()); }
(rule__DataModel__Alternatives_4)*
{ after(grammarAccess.getDataModelAccess().getAlternatives_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataModel__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataModel__Group__5__Impl
	rule__DataModel__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__DataModel__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataModelAccess().getTransmitKeyword_5()); }

	'transmit' 

{ after(grammarAccess.getDataModelAccess().getTransmitKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataModel__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataModel__Group__6__Impl
	rule__DataModel__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__DataModel__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataModelAccess().getTransmitAssignment_6()); }
(rule__DataModel__TransmitAssignment_6)
{ after(grammarAccess.getDataModelAccess().getTransmitAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataModel__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataModel__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataModel__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataModelAccess().getGroup_7()); }
(rule__DataModel__Group_7__0)*
{ after(grammarAccess.getDataModelAccess().getGroup_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__DataModel__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataModel__Group_7__0__Impl
	rule__DataModel__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataModel__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataModelAccess().getCommaKeyword_7_0()); }

	',' 

{ after(grammarAccess.getDataModelAccess().getCommaKeyword_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataModel__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataModel__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataModel__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataModelAccess().getTransmitAssignment_7_1()); }
(rule__DataModel__TransmitAssignment_7_1)
{ after(grammarAccess.getDataModelAccess().getTransmitAssignment_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Options__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Options__Group__0__Impl
	rule__Options__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Options__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionsAccess().getOptionsAction_0()); }
(

)
{ after(grammarAccess.getOptionsAccess().getOptionsAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Options__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Options__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Options__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionsAccess().getAlternatives_1()); }
(rule__Options__Alternatives_1)*
{ after(grammarAccess.getOptionsAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Options__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Options__Group_1_0__0__Impl
	rule__Options__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Options__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionsAccess().getTransmissionKeyword_1_0_0()); }

	'transmission' 

{ after(grammarAccess.getOptionsAccess().getTransmissionKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Options__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Options__Group_1_0__1__Impl
	rule__Options__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Options__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionsAccess().getTypeKeyword_1_0_1()); }

	'type' 

{ after(grammarAccess.getOptionsAccess().getTypeKeyword_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Options__Group_1_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Options__Group_1_0__2__Impl
	rule__Options__Group_1_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Options__Group_1_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionsAccess().getColonKeyword_1_0_2()); }

	':' 

{ after(grammarAccess.getOptionsAccess().getColonKeyword_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Options__Group_1_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Options__Group_1_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Options__Group_1_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionsAccess().getTransmissionTypeAssignment_1_0_3()); }
(rule__Options__TransmissionTypeAssignment_1_0_3)
{ after(grammarAccess.getOptionsAccess().getTransmissionTypeAssignment_1_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Options__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Options__Group_1_1__0__Impl
	rule__Options__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Options__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionsAccess().getSensorKeyword_1_1_0()); }

	'sensor' 

{ after(grammarAccess.getOptionsAccess().getSensorKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Options__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Options__Group_1_1__1__Impl
	rule__Options__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Options__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionsAccess().getLanguageKeyword_1_1_1()); }

	'language' 

{ after(grammarAccess.getOptionsAccess().getLanguageKeyword_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Options__Group_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Options__Group_1_1__2__Impl
	rule__Options__Group_1_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Options__Group_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionsAccess().getColonKeyword_1_1_2()); }

	':' 

{ after(grammarAccess.getOptionsAccess().getColonKeyword_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Options__Group_1_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Options__Group_1_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Options__Group_1_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionsAccess().getSensorLanguageAssignment_1_1_3()); }
(rule__Options__SensorLanguageAssignment_1_1_3)
{ after(grammarAccess.getOptionsAccess().getSensorLanguageAssignment_1_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Options__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Options__Group_1_2__0__Impl
	rule__Options__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Options__Group_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionsAccess().getReceiverKeyword_1_2_0()); }

	'receiver' 

{ after(grammarAccess.getOptionsAccess().getReceiverKeyword_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Options__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Options__Group_1_2__1__Impl
	rule__Options__Group_1_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Options__Group_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionsAccess().getLanguageKeyword_1_2_1()); }

	'language' 

{ after(grammarAccess.getOptionsAccess().getLanguageKeyword_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Options__Group_1_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Options__Group_1_2__2__Impl
	rule__Options__Group_1_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Options__Group_1_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionsAccess().getColonKeyword_1_2_2()); }

	':' 

{ after(grammarAccess.getOptionsAccess().getColonKeyword_1_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Options__Group_1_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Options__Group_1_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Options__Group_1_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionsAccess().getReceiverLanguageAssignment_1_2_3()); }
(rule__Options__ReceiverLanguageAssignment_1_2_3)
{ after(grammarAccess.getOptionsAccess().getReceiverLanguageAssignment_1_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Push__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Push__Group__0__Impl
	rule__Push__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Push__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPushAccess().getPushKeyword_0()); }

	'push' 

{ after(grammarAccess.getPushAccess().getPushKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Push__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Push__Group__1__Impl
	rule__Push__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Push__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPushAccess().getWithKeyword_1()); }

	'with' 

{ after(grammarAccess.getPushAccess().getWithKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Push__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Push__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Push__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPushAccess().getMethodNameAssignment_2()); }
(rule__Push__MethodNameAssignment_2)
{ after(grammarAccess.getPushAccess().getMethodNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Pull__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pull__Group_1__0__Impl
	rule__Pull__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Pull__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPullAccess().getPullKeyword_1_0()); }

	'pull' 

{ after(grammarAccess.getPullAccess().getPullKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Pull__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pull__Group_1__1__Impl
	rule__Pull__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Pull__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPullAccess().getWithKeyword_1_1()); }

	'with' 

{ after(grammarAccess.getPullAccess().getWithKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Pull__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pull__Group_1__2__Impl
	rule__Pull__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Pull__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPullAccess().getFrequencyKeyword_1_2()); }

	'Frequency' 

{ after(grammarAccess.getPullAccess().getFrequencyKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Pull__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pull__Group_1__3__Impl
	rule__Pull__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Pull__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPullAccess().getColonKeyword_1_3()); }

	':' 

{ after(grammarAccess.getPullAccess().getColonKeyword_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Pull__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pull__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Pull__Group_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPullAccess().getFrequencyAssignment_1_4()); }
(rule__Pull__FrequencyAssignment_1_4)
{ after(grammarAccess.getPullAccess().getFrequencyAssignment_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__TimeDivisionMultiplexing__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeDivisionMultiplexing__Group__0__Impl
	rule__TimeDivisionMultiplexing__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeDivisionMultiplexing__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeDivisionMultiplexingAccess().getTimeDivisionMultiplexingKeyword_0()); }

	'timeDivisionMultiplexing' 

{ after(grammarAccess.getTimeDivisionMultiplexingAccess().getTimeDivisionMultiplexingKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimeDivisionMultiplexing__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeDivisionMultiplexing__Group__1__Impl
	rule__TimeDivisionMultiplexing__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeDivisionMultiplexing__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeDivisionMultiplexingAccess().getWithKeyword_1()); }

	'with' 

{ after(grammarAccess.getTimeDivisionMultiplexingAccess().getWithKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimeDivisionMultiplexing__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeDivisionMultiplexing__Group__2__Impl
	rule__TimeDivisionMultiplexing__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeDivisionMultiplexing__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeDivisionMultiplexingAccess().getFrequencyKeyword_2()); }

	'Frequency' 

{ after(grammarAccess.getTimeDivisionMultiplexingAccess().getFrequencyKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimeDivisionMultiplexing__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeDivisionMultiplexing__Group__3__Impl
	rule__TimeDivisionMultiplexing__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeDivisionMultiplexing__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeDivisionMultiplexingAccess().getColonKeyword_3()); }

	':' 

{ after(grammarAccess.getTimeDivisionMultiplexingAccess().getColonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimeDivisionMultiplexing__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeDivisionMultiplexing__Group__4__Impl
	rule__TimeDivisionMultiplexing__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeDivisionMultiplexing__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeDivisionMultiplexingAccess().getFrequencyAssignment_4()); }
(rule__TimeDivisionMultiplexing__FrequencyAssignment_4)
{ after(grammarAccess.getTimeDivisionMultiplexingAccess().getFrequencyAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimeDivisionMultiplexing__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeDivisionMultiplexing__Group__5__Impl
	rule__TimeDivisionMultiplexing__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeDivisionMultiplexing__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeDivisionMultiplexingAccess().getAndKeyword_5()); }

	'and' 

{ after(grammarAccess.getTimeDivisionMultiplexingAccess().getAndKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimeDivisionMultiplexing__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeDivisionMultiplexing__Group__6__Impl
	rule__TimeDivisionMultiplexing__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeDivisionMultiplexing__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeDivisionMultiplexingAccess().getDurationKeyword_6()); }

	'Duration' 

{ after(grammarAccess.getTimeDivisionMultiplexingAccess().getDurationKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimeDivisionMultiplexing__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeDivisionMultiplexing__Group__7__Impl
	rule__TimeDivisionMultiplexing__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeDivisionMultiplexing__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeDivisionMultiplexingAccess().getColonKeyword_7()); }

	':' 

{ after(grammarAccess.getTimeDivisionMultiplexingAccess().getColonKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimeDivisionMultiplexing__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeDivisionMultiplexing__Group__8__Impl
	rule__TimeDivisionMultiplexing__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeDivisionMultiplexing__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeDivisionMultiplexingAccess().getDurationAssignment_8()); }
(rule__TimeDivisionMultiplexing__DurationAssignment_8)
{ after(grammarAccess.getTimeDivisionMultiplexingAccess().getDurationAssignment_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimeDivisionMultiplexing__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeDivisionMultiplexing__Group__9__Impl
	rule__TimeDivisionMultiplexing__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeDivisionMultiplexing__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeDivisionMultiplexingAccess().getAndKeyword_9()); }

	'and' 

{ after(grammarAccess.getTimeDivisionMultiplexingAccess().getAndKeyword_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimeDivisionMultiplexing__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeDivisionMultiplexing__Group__10__Impl
	rule__TimeDivisionMultiplexing__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeDivisionMultiplexing__Group__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeDivisionMultiplexingAccess().getTimeSlotKeyword_10()); }

	'timeSlot' 

{ after(grammarAccess.getTimeDivisionMultiplexingAccess().getTimeSlotKeyword_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimeDivisionMultiplexing__Group__11
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeDivisionMultiplexing__Group__11__Impl
	rule__TimeDivisionMultiplexing__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeDivisionMultiplexing__Group__11__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeDivisionMultiplexingAccess().getColonKeyword_11()); }

	':' 

{ after(grammarAccess.getTimeDivisionMultiplexingAccess().getColonKeyword_11()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimeDivisionMultiplexing__Group__12
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeDivisionMultiplexing__Group__12__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeDivisionMultiplexing__Group__12__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeDivisionMultiplexingAccess().getTimeSlotAssignment_12()); }
(rule__TimeDivisionMultiplexing__TimeSlotAssignment_12)
{ after(grammarAccess.getTimeDivisionMultiplexingAccess().getTimeSlotAssignment_12()); }
)

;
finally {
	restoreStackSize(stackSize);
}




























rule__Representation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Representation__Group__0__Impl
	rule__Representation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Representation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRepresentationAccess().getAlternatives_0()); }
(rule__Representation__Alternatives_0)
{ after(grammarAccess.getRepresentationAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Representation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Representation__Group__1__Impl
	rule__Representation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Representation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRepresentationAccess().getNameAssignment_1()); }
(rule__Representation__NameAssignment_1)
{ after(grammarAccess.getRepresentationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Representation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Representation__Group__2__Impl
	rule__Representation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Representation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRepresentationAccess().getIsKeyword_2()); }

	'is' 

{ after(grammarAccess.getRepresentationAccess().getIsKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Representation__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Representation__Group__3__Impl
	rule__Representation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Representation__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRepresentationAccess().getTypeAssignment_3()); }
(rule__Representation__TypeAssignment_3)
{ after(grammarAccess.getRepresentationAccess().getTypeAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Representation__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Representation__Group__4__Impl
	rule__Representation__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Representation__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRepresentationAccess().getByKeyword_4()); }

	'by' 

{ after(grammarAccess.getRepresentationAccess().getByKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Representation__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Representation__Group__5__Impl
	rule__Representation__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Representation__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRepresentationAccess().getByteCountAssignment_5()); }
(rule__Representation__ByteCountAssignment_5)
{ after(grammarAccess.getRepresentationAccess().getByteCountAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Representation__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Representation__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Representation__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRepresentationAccess().getAlternatives_6()); }
(rule__Representation__Alternatives_6)
{ after(grammarAccess.getRepresentationAccess().getAlternatives_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Calculated__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Calculated__Group__0__Impl
	rule__Calculated__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Calculated__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCalculatedAccess().getAlternatives_0()); }
(rule__Calculated__Alternatives_0)
{ after(grammarAccess.getCalculatedAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Calculated__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Calculated__Group__1__Impl
	rule__Calculated__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Calculated__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCalculatedAccess().getNameAssignment_1()); }
(rule__Calculated__NameAssignment_1)
{ after(grammarAccess.getCalculatedAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Calculated__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Calculated__Group__2__Impl
	rule__Calculated__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Calculated__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCalculatedAccess().getAsKeyword_2()); }

	'as' 

{ after(grammarAccess.getCalculatedAccess().getAsKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Calculated__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Calculated__Group__3__Impl
	rule__Calculated__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Calculated__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCalculatedAccess().getRepresentationAssignment_3()); }
(rule__Calculated__RepresentationAssignment_3)
{ after(grammarAccess.getCalculatedAccess().getRepresentationAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Calculated__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Calculated__Group__4__Impl
	rule__Calculated__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Calculated__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCalculatedAccess().getByKeyword_4()); }

	'by' 

{ after(grammarAccess.getCalculatedAccess().getByKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Calculated__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Calculated__Group__5__Impl
	rule__Calculated__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Calculated__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCalculatedAccess().getMethodNameAssignment_5()); }
(rule__Calculated__MethodNameAssignment_5)
{ after(grammarAccess.getCalculatedAccess().getMethodNameAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Calculated__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Calculated__Group__6__Impl
	rule__Calculated__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Calculated__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCalculatedAccess().getGroup_6()); }
(rule__Calculated__Group_6__0)?
{ after(grammarAccess.getCalculatedAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Calculated__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Calculated__Group__7__Impl
	rule__Calculated__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Calculated__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCalculatedAccess().getWithKeyword_7()); }

	'with' 

{ after(grammarAccess.getCalculatedAccess().getWithKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Calculated__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Calculated__Group__8__Impl
	rule__Calculated__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Calculated__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCalculatedAccess().getParameterAssignment_8()); }
(rule__Calculated__ParameterAssignment_8)
{ after(grammarAccess.getCalculatedAccess().getParameterAssignment_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Calculated__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Calculated__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Calculated__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCalculatedAccess().getGroup_9()); }
(rule__Calculated__Group_9__0)*
{ after(grammarAccess.getCalculatedAccess().getGroup_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}






















rule__Calculated__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Calculated__Group_6__0__Impl
	rule__Calculated__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Calculated__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCalculatedAccess().getCommaKeyword_6_0()); }

	',' 

{ after(grammarAccess.getCalculatedAccess().getCommaKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Calculated__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Calculated__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Calculated__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCalculatedAccess().getMethodNameOutAssignment_6_1()); }
(rule__Calculated__MethodNameOutAssignment_6_1)
{ after(grammarAccess.getCalculatedAccess().getMethodNameOutAssignment_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Calculated__Group_9__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Calculated__Group_9__0__Impl
	rule__Calculated__Group_9__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Calculated__Group_9__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCalculatedAccess().getCommaKeyword_9_0()); }

	',' 

{ after(grammarAccess.getCalculatedAccess().getCommaKeyword_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Calculated__Group_9__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Calculated__Group_9__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Calculated__Group_9__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCalculatedAccess().getParameterAssignment_9_1()); }
(rule__Calculated__ParameterAssignment_9_1)
{ after(grammarAccess.getCalculatedAccess().getParameterAssignment_9_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Parameter__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group__0__Impl
	rule__Parameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getLeftParenthesisKeyword_0()); }

	'(' 

{ after(grammarAccess.getParameterAccess().getLeftParenthesisKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group__1__Impl
	rule__Parameter__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getInterpretationAssignment_1()); }
(rule__Parameter__InterpretationAssignment_1)
{ after(grammarAccess.getParameterAccess().getInterpretationAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group__2__Impl
	rule__Parameter__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getGroup_2()); }
(rule__Parameter__Group_2__0)?
{ after(grammarAccess.getParameterAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getParameterAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Parameter__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group_2__0__Impl
	rule__Parameter__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getAsKeyword_2_0()); }

	'as' 

{ after(grammarAccess.getParameterAccess().getAsKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getArgumentTypeAssignment_2_1()); }
(rule__Parameter__ArgumentTypeAssignment_2_1)
{ after(grammarAccess.getParameterAccess().getArgumentTypeAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__InterpretationGroup__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterpretationGroup__Group__0__Impl
	rule__InterpretationGroup__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InterpretationGroup__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterpretationGroupAccess().getGroupKeyword_0()); }

	'group' 

{ after(grammarAccess.getInterpretationGroupAccess().getGroupKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterpretationGroup__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterpretationGroup__Group__1__Impl
	rule__InterpretationGroup__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InterpretationGroup__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterpretationGroupAccess().getNameAssignment_1()); }
(rule__InterpretationGroup__NameAssignment_1)
{ after(grammarAccess.getInterpretationGroupAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterpretationGroup__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterpretationGroup__Group__2__Impl
	rule__InterpretationGroup__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InterpretationGroup__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterpretationGroupAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getInterpretationGroupAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterpretationGroup__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterpretationGroup__Group__3__Impl
	rule__InterpretationGroup__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__InterpretationGroup__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterpretationGroupAccess().getInterpretationsAssignment_3()); }
(rule__InterpretationGroup__InterpretationsAssignment_3)*
{ after(grammarAccess.getInterpretationGroupAccess().getInterpretationsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterpretationGroup__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterpretationGroup__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InterpretationGroup__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterpretationGroupAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getInterpretationGroupAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Measurement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Measurement__Group__0__Impl
	rule__Measurement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Measurement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMeasurementAccess().getMeasurementKeyword_0()); }

	'measurement' 

{ after(grammarAccess.getMeasurementAccess().getMeasurementKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Measurement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Measurement__Group__1__Impl
	rule__Measurement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Measurement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMeasurementAccess().getOfKeyword_1()); }

	'of' 

{ after(grammarAccess.getMeasurementAccess().getOfKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Measurement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Measurement__Group__2__Impl
	rule__Measurement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Measurement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMeasurementAccess().getQuantityAssignment_2()); }
(rule__Measurement__QuantityAssignment_2)
{ after(grammarAccess.getMeasurementAccess().getQuantityAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Measurement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Measurement__Group__3__Impl
	rule__Measurement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Measurement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMeasurementAccess().getNameAssignment_3()); }
(rule__Measurement__NameAssignment_3)
{ after(grammarAccess.getMeasurementAccess().getNameAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Measurement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Measurement__Group__4__Impl
	rule__Measurement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Measurement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMeasurementAccess().getInKeyword_4()); }

	'in' 

{ after(grammarAccess.getMeasurementAccess().getInKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Measurement__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Measurement__Group__5__Impl
	rule__Measurement__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Measurement__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMeasurementAccess().getScaleAssignment_5()); }
(rule__Measurement__ScaleAssignment_5)?
{ after(grammarAccess.getMeasurementAccess().getScaleAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Measurement__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Measurement__Group__6__Impl
	rule__Measurement__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Measurement__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMeasurementAccess().getUnitAssignment_6()); }
(rule__Measurement__UnitAssignment_6)
{ after(grammarAccess.getMeasurementAccess().getUnitAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Measurement__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Measurement__Group__7__Impl
	rule__Measurement__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Measurement__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMeasurementAccess().getAsKeyword_7()); }

	'as' 

{ after(grammarAccess.getMeasurementAccess().getAsKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Measurement__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Measurement__Group__8__Impl
	rule__Measurement__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Measurement__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMeasurementAccess().getRepresentationAssignment_8()); }
(rule__Measurement__RepresentationAssignment_8)
{ after(grammarAccess.getMeasurementAccess().getRepresentationAssignment_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Measurement__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Measurement__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Measurement__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMeasurementAccess().getConstraintsAssignment_9()); }
(rule__Measurement__ConstraintsAssignment_9)*
{ after(grammarAccess.getMeasurementAccess().getConstraintsAssignment_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}






















rule__MeasurementInRange__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MeasurementInRange__Group__0__Impl
	rule__MeasurementInRange__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MeasurementInRange__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMeasurementInRangeAccess().getFromKeyword_0()); }

	'from' 

{ after(grammarAccess.getMeasurementInRangeAccess().getFromKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MeasurementInRange__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MeasurementInRange__Group__1__Impl
	rule__MeasurementInRange__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MeasurementInRange__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMeasurementInRangeAccess().getLowerBoundAssignment_1()); }
(rule__MeasurementInRange__LowerBoundAssignment_1)
{ after(grammarAccess.getMeasurementInRangeAccess().getLowerBoundAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MeasurementInRange__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MeasurementInRange__Group__2__Impl
	rule__MeasurementInRange__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MeasurementInRange__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMeasurementInRangeAccess().getToKeyword_2()); }

	'to' 

{ after(grammarAccess.getMeasurementInRangeAccess().getToKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MeasurementInRange__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MeasurementInRange__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MeasurementInRange__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMeasurementInRangeAccess().getUpperBoundAssignment_3()); }
(rule__MeasurementInRange__UpperBoundAssignment_3)
{ after(grammarAccess.getMeasurementInRangeAccess().getUpperBoundAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__MeasurementAdaption__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MeasurementAdaption__Group__0__Impl
	rule__MeasurementAdaption__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MeasurementAdaption__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMeasurementAdaptionAccess().getWithKeyword_0()); }

	'with' 

{ after(grammarAccess.getMeasurementAdaptionAccess().getWithKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MeasurementAdaption__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MeasurementAdaption__Group__1__Impl
	rule__MeasurementAdaption__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MeasurementAdaption__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMeasurementAdaptionAccess().getScalingFactorKeyword_1()); }

	'scaling factor' 

{ after(grammarAccess.getMeasurementAdaptionAccess().getScalingFactorKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MeasurementAdaption__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MeasurementAdaption__Group__2__Impl
	rule__MeasurementAdaption__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MeasurementAdaption__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMeasurementAdaptionAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getMeasurementAdaptionAccess().getColonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MeasurementAdaption__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MeasurementAdaption__Group__3__Impl
	rule__MeasurementAdaption__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MeasurementAdaption__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMeasurementAdaptionAccess().getScalingFactorAssignment_3()); }
(rule__MeasurementAdaption__ScalingFactorAssignment_3)
{ after(grammarAccess.getMeasurementAdaptionAccess().getScalingFactorAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MeasurementAdaption__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MeasurementAdaption__Group__4__Impl
	rule__MeasurementAdaption__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__MeasurementAdaption__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMeasurementAdaptionAccess().getAndKeyword_4()); }

	'and' 

{ after(grammarAccess.getMeasurementAdaptionAccess().getAndKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MeasurementAdaption__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MeasurementAdaption__Group__5__Impl
	rule__MeasurementAdaption__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__MeasurementAdaption__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMeasurementAdaptionAccess().getOffsetKeyword_5()); }

	'offset' 

{ after(grammarAccess.getMeasurementAdaptionAccess().getOffsetKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MeasurementAdaption__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MeasurementAdaption__Group__6__Impl
	rule__MeasurementAdaption__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__MeasurementAdaption__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMeasurementAdaptionAccess().getColonKeyword_6()); }

	':' 

{ after(grammarAccess.getMeasurementAdaptionAccess().getColonKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MeasurementAdaption__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MeasurementAdaption__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MeasurementAdaption__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMeasurementAdaptionAccess().getOffsetAssignment_7()); }
(rule__MeasurementAdaption__OffsetAssignment_7)
{ after(grammarAccess.getMeasurementAdaptionAccess().getOffsetAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__Measure__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Measure__Group__0__Impl
	rule__Measure__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Measure__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMeasureAccess().getValueAssignment_0()); }
(rule__Measure__ValueAssignment_0)
{ after(grammarAccess.getMeasureAccess().getValueAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Measure__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Measure__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Measure__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMeasureAccess().getUnitAssignment_1()); }
(rule__Measure__UnitAssignment_1)
{ after(grammarAccess.getMeasureAccess().getUnitAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PrimitiveInterpretation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimitiveInterpretation__Group__0__Impl
	rule__PrimitiveInterpretation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveInterpretation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimitiveInterpretationAccess().getPrimitiveKeyword_0()); }

	'primitive' 

{ after(grammarAccess.getPrimitiveInterpretationAccess().getPrimitiveKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimitiveInterpretation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimitiveInterpretation__Group__1__Impl
	rule__PrimitiveInterpretation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveInterpretation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimitiveInterpretationAccess().getTypeAssignment_1()); }
(rule__PrimitiveInterpretation__TypeAssignment_1)
{ after(grammarAccess.getPrimitiveInterpretationAccess().getTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimitiveInterpretation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimitiveInterpretation__Group__2__Impl
	rule__PrimitiveInterpretation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveInterpretation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimitiveInterpretationAccess().getNameAssignment_2()); }
(rule__PrimitiveInterpretation__NameAssignment_2)
{ after(grammarAccess.getPrimitiveInterpretationAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimitiveInterpretation__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimitiveInterpretation__Group__3__Impl
	rule__PrimitiveInterpretation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveInterpretation__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimitiveInterpretationAccess().getAsKeyword_3()); }

	'as' 

{ after(grammarAccess.getPrimitiveInterpretationAccess().getAsKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimitiveInterpretation__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimitiveInterpretation__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveInterpretation__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimitiveInterpretationAccess().getRepresentationAssignment_4()); }
(rule__PrimitiveInterpretation__RepresentationAssignment_4)
{ after(grammarAccess.getPrimitiveInterpretationAccess().getRepresentationAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Constant__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constant__Group__0__Impl
	rule__Constant__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantAccess().getConstantKeyword_0()); }

	'constant' 

{ after(grammarAccess.getConstantAccess().getConstantKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constant__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constant__Group__1__Impl
	rule__Constant__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantAccess().getNameAssignment_1()); }
(rule__Constant__NameAssignment_1)
{ after(grammarAccess.getConstantAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constant__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constant__Group__2__Impl
	rule__Constant__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantAccess().getAsKeyword_2()); }

	'as' 

{ after(grammarAccess.getConstantAccess().getAsKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constant__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constant__Group__3__Impl
	rule__Constant__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantAccess().getRepresentationAssignment_3()); }
(rule__Constant__RepresentationAssignment_3)
{ after(grammarAccess.getConstantAccess().getRepresentationAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constant__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constant__Group__4__Impl
	rule__Constant__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantAccess().getIsKeyword_4()); }

	'is' 

{ after(grammarAccess.getConstantAccess().getIsKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constant__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constant__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantAccess().getConstantValueAssignment_5()); }
(rule__Constant__ConstantValueAssignment_5)
{ after(grammarAccess.getConstantAccess().getConstantValueAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__DOUBLE__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DOUBLE__Group__0__Impl
	rule__DOUBLE__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDOUBLEAccess().getINTTerminalRuleCall_0()); }
	RULE_INT
{ after(grammarAccess.getDOUBLEAccess().getINTTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DOUBLE__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DOUBLE__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDOUBLEAccess().getGroup_1()); }
(rule__DOUBLE__Group_1__0)?
{ after(grammarAccess.getDOUBLEAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DOUBLE__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DOUBLE__Group_1__0__Impl
	rule__DOUBLE__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDOUBLEAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getDOUBLEAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DOUBLE__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DOUBLE__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDOUBLEAccess().getINTTerminalRuleCall_1_1()); }
	RULE_INT
{ after(grammarAccess.getDOUBLEAccess().getINTTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__DataModel__OptionsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataModelAccess().getOptionsOptionsParserRuleCall_2_0()); }
	ruleOptions{ after(grammarAccess.getDataModelAccess().getOptionsOptionsParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataModel__RepresentationsAssignment_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataModelAccess().getRepresentationsRepresentationParserRuleCall_4_0_0()); }
	ruleRepresentation{ after(grammarAccess.getDataModelAccess().getRepresentationsRepresentationParserRuleCall_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataModel__InterpretationsAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataModelAccess().getInterpretationsInterpretationParserRuleCall_4_1_0()); }
	ruleInterpretation{ after(grammarAccess.getDataModelAccess().getInterpretationsInterpretationParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataModel__TransmitAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataModelAccess().getTransmitInterpretationCrossReference_6_0()); }
(
{ before(grammarAccess.getDataModelAccess().getTransmitInterpretationIDTerminalRuleCall_6_0_1()); }
	RULE_ID{ after(grammarAccess.getDataModelAccess().getTransmitInterpretationIDTerminalRuleCall_6_0_1()); }
)
{ after(grammarAccess.getDataModelAccess().getTransmitInterpretationCrossReference_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataModel__TransmitAssignment_7_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataModelAccess().getTransmitInterpretationCrossReference_7_1_0()); }
(
{ before(grammarAccess.getDataModelAccess().getTransmitInterpretationIDTerminalRuleCall_7_1_0_1()); }
	RULE_ID{ after(grammarAccess.getDataModelAccess().getTransmitInterpretationIDTerminalRuleCall_7_1_0_1()); }
)
{ after(grammarAccess.getDataModelAccess().getTransmitInterpretationCrossReference_7_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Options__TransmissionTypeAssignment_1_0_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionsAccess().getTransmissionTypeTransmissionParserRuleCall_1_0_3_0()); }
	ruleTransmission{ after(grammarAccess.getOptionsAccess().getTransmissionTypeTransmissionParserRuleCall_1_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Options__SensorLanguageAssignment_1_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionsAccess().getSensorLanguageGenerationLanguageEnumRuleCall_1_1_3_0()); }
	ruleGenerationLanguage{ after(grammarAccess.getOptionsAccess().getSensorLanguageGenerationLanguageEnumRuleCall_1_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Options__ReceiverLanguageAssignment_1_2_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionsAccess().getReceiverLanguageGenerationLanguageEnumRuleCall_1_2_3_0()); }
	ruleGenerationLanguage{ after(grammarAccess.getOptionsAccess().getReceiverLanguageGenerationLanguageEnumRuleCall_1_2_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Push__MethodNameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPushAccess().getMethodNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getPushAccess().getMethodNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Pull__FrequencyAssignment_1_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPullAccess().getFrequencyINTTerminalRuleCall_1_4_0()); }
	RULE_INT{ after(grammarAccess.getPullAccess().getFrequencyINTTerminalRuleCall_1_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TimeDivisionMultiplexing__FrequencyAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeDivisionMultiplexingAccess().getFrequencyINTTerminalRuleCall_4_0()); }
	RULE_INT{ after(grammarAccess.getTimeDivisionMultiplexingAccess().getFrequencyINTTerminalRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TimeDivisionMultiplexing__DurationAssignment_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeDivisionMultiplexingAccess().getDurationDOUBLEParserRuleCall_8_0()); }
	ruleDOUBLE{ after(grammarAccess.getTimeDivisionMultiplexingAccess().getDurationDOUBLEParserRuleCall_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TimeDivisionMultiplexing__TimeSlotAssignment_12
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeDivisionMultiplexingAccess().getTimeSlotDOUBLEParserRuleCall_12_0()); }
	ruleDOUBLE{ after(grammarAccess.getTimeDivisionMultiplexingAccess().getTimeSlotDOUBLEParserRuleCall_12_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Representation__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRepresentationAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getRepresentationAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Representation__TypeAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRepresentationAccess().getTypeTypeEnumRuleCall_3_0()); }
	ruleType{ after(grammarAccess.getRepresentationAccess().getTypeTypeEnumRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Representation__ByteCountAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRepresentationAccess().getByteCountINTTerminalRuleCall_5_0()); }
	RULE_INT{ after(grammarAccess.getRepresentationAccess().getByteCountINTTerminalRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Calculated__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCalculatedAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getCalculatedAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Calculated__RepresentationAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCalculatedAccess().getRepresentationRepresentationCrossReference_3_0()); }
(
{ before(grammarAccess.getCalculatedAccess().getRepresentationRepresentationIDTerminalRuleCall_3_0_1()); }
	RULE_ID{ after(grammarAccess.getCalculatedAccess().getRepresentationRepresentationIDTerminalRuleCall_3_0_1()); }
)
{ after(grammarAccess.getCalculatedAccess().getRepresentationRepresentationCrossReference_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Calculated__MethodNameAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCalculatedAccess().getMethodNameIDTerminalRuleCall_5_0()); }
	RULE_ID{ after(grammarAccess.getCalculatedAccess().getMethodNameIDTerminalRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Calculated__MethodNameOutAssignment_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCalculatedAccess().getMethodNameOutIDTerminalRuleCall_6_1_0()); }
	RULE_ID{ after(grammarAccess.getCalculatedAccess().getMethodNameOutIDTerminalRuleCall_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Calculated__ParameterAssignment_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCalculatedAccess().getParameterParameterParserRuleCall_8_0()); }
	ruleParameter{ after(grammarAccess.getCalculatedAccess().getParameterParameterParserRuleCall_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Calculated__ParameterAssignment_9_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCalculatedAccess().getParameterParameterParserRuleCall_9_1_0()); }
	ruleParameter{ after(grammarAccess.getCalculatedAccess().getParameterParameterParserRuleCall_9_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__InterpretationAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getInterpretationInterpretationCrossReference_1_0()); }
(
{ before(grammarAccess.getParameterAccess().getInterpretationInterpretationIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getParameterAccess().getInterpretationInterpretationIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getParameterAccess().getInterpretationInterpretationCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__ArgumentTypeAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getArgumentTypeArgumentTypeEnumRuleCall_2_1_0()); }
	ruleArgumentType{ after(grammarAccess.getParameterAccess().getArgumentTypeArgumentTypeEnumRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InterpretationGroup__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterpretationGroupAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getInterpretationGroupAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InterpretationGroup__InterpretationsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterpretationGroupAccess().getInterpretationsInterpretationParserRuleCall_3_0()); }
	ruleInterpretation{ after(grammarAccess.getInterpretationGroupAccess().getInterpretationsInterpretationParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Measurement__QuantityAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMeasurementAccess().getQuantityQuantityEnumRuleCall_2_0()); }
	ruleQuantity{ after(grammarAccess.getMeasurementAccess().getQuantityQuantityEnumRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Measurement__NameAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMeasurementAccess().getNameIDTerminalRuleCall_3_0()); }
	RULE_ID{ after(grammarAccess.getMeasurementAccess().getNameIDTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Measurement__ScaleAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMeasurementAccess().getScaleDOUBLEParserRuleCall_5_0()); }
	ruleDOUBLE{ after(grammarAccess.getMeasurementAccess().getScaleDOUBLEParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Measurement__UnitAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMeasurementAccess().getUnitSTRINGTerminalRuleCall_6_0()); }
	RULE_STRING{ after(grammarAccess.getMeasurementAccess().getUnitSTRINGTerminalRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Measurement__RepresentationAssignment_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMeasurementAccess().getRepresentationRepresentationCrossReference_8_0()); }
(
{ before(grammarAccess.getMeasurementAccess().getRepresentationRepresentationIDTerminalRuleCall_8_0_1()); }
	RULE_ID{ after(grammarAccess.getMeasurementAccess().getRepresentationRepresentationIDTerminalRuleCall_8_0_1()); }
)
{ after(grammarAccess.getMeasurementAccess().getRepresentationRepresentationCrossReference_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Measurement__ConstraintsAssignment_9
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMeasurementAccess().getConstraintsMeasurementConstraintParserRuleCall_9_0()); }
	ruleMeasurementConstraint{ after(grammarAccess.getMeasurementAccess().getConstraintsMeasurementConstraintParserRuleCall_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MeasurementInRange__LowerBoundAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMeasurementInRangeAccess().getLowerBoundMeasureParserRuleCall_1_0()); }
	ruleMeasure{ after(grammarAccess.getMeasurementInRangeAccess().getLowerBoundMeasureParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MeasurementInRange__UpperBoundAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMeasurementInRangeAccess().getUpperBoundMeasureParserRuleCall_3_0()); }
	ruleMeasure{ after(grammarAccess.getMeasurementInRangeAccess().getUpperBoundMeasureParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MeasurementAdaption__ScalingFactorAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMeasurementAdaptionAccess().getScalingFactorDOUBLEParserRuleCall_3_0()); }
	ruleDOUBLE{ after(grammarAccess.getMeasurementAdaptionAccess().getScalingFactorDOUBLEParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MeasurementAdaption__OffsetAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMeasurementAdaptionAccess().getOffsetDOUBLEParserRuleCall_7_0()); }
	ruleDOUBLE{ after(grammarAccess.getMeasurementAdaptionAccess().getOffsetDOUBLEParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Measure__ValueAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMeasureAccess().getValueDOUBLEParserRuleCall_0_0()); }
	ruleDOUBLE{ after(grammarAccess.getMeasureAccess().getValueDOUBLEParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Measure__UnitAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMeasureAccess().getUnitSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getMeasureAccess().getUnitSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveInterpretation__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimitiveInterpretationAccess().getTypeTypeEnumRuleCall_1_0()); }
	ruleType{ after(grammarAccess.getPrimitiveInterpretationAccess().getTypeTypeEnumRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveInterpretation__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimitiveInterpretationAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getPrimitiveInterpretationAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveInterpretation__RepresentationAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimitiveInterpretationAccess().getRepresentationRepresentationCrossReference_4_0()); }
(
{ before(grammarAccess.getPrimitiveInterpretationAccess().getRepresentationRepresentationIDTerminalRuleCall_4_0_1()); }
	RULE_ID{ after(grammarAccess.getPrimitiveInterpretationAccess().getRepresentationRepresentationIDTerminalRuleCall_4_0_1()); }
)
{ after(grammarAccess.getPrimitiveInterpretationAccess().getRepresentationRepresentationCrossReference_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getConstantAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__RepresentationAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantAccess().getRepresentationRepresentationCrossReference_3_0()); }
(
{ before(grammarAccess.getConstantAccess().getRepresentationRepresentationIDTerminalRuleCall_3_0_1()); }
	RULE_ID{ after(grammarAccess.getConstantAccess().getRepresentationRepresentationIDTerminalRuleCall_3_0_1()); }
)
{ after(grammarAccess.getConstantAccess().getRepresentationRepresentationCrossReference_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__ConstantValueAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantAccess().getConstantValueSTRINGTerminalRuleCall_5_0()); }
	RULE_STRING{ after(grammarAccess.getConstantAccess().getConstantValueSTRINGTerminalRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


