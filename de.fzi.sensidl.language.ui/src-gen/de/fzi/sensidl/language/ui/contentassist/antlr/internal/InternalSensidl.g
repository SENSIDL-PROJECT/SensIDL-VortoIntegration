/*
 * generated by Xtext
 */
grammar InternalSensidl;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package de.fzi.sensidl.language.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package de.fzi.sensidl.language.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import de.fzi.sensidl.language.services.SensidlGrammarAccess;

}

@parser::members {
 
 	private SensidlGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(SensidlGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleIdentifiableElement
entryRuleIdentifiableElement 
:
{ before(grammarAccess.getIdentifiableElementRule()); }
	 ruleIdentifiableElement
{ after(grammarAccess.getIdentifiableElementRule()); } 
	 EOF 
;

// Rule IdentifiableElement
ruleIdentifiableElement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIdentifiableElementAccess().getAlternatives()); }
(rule__IdentifiableElement__Alternatives)
{ after(grammarAccess.getIdentifiableElementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNamedElement
entryRuleNamedElement 
:
{ before(grammarAccess.getNamedElementRule()); }
	 ruleNamedElement
{ after(grammarAccess.getNamedElementRule()); } 
	 EOF 
;

// Rule NamedElement
ruleNamedElement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNamedElementAccess().getAlternatives()); }
(rule__NamedElement__Alternatives)
{ after(grammarAccess.getNamedElementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSensorInterface
entryRuleSensorInterface 
:
{ before(grammarAccess.getSensorInterfaceRule()); }
	 ruleSensorInterface
{ after(grammarAccess.getSensorInterfaceRule()); } 
	 EOF 
;

// Rule SensorInterface
ruleSensorInterface
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSensorInterfaceAccess().getGroup()); }
(rule__SensorInterface__Group__0)
{ after(grammarAccess.getSensorInterfaceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEncodingSettings
entryRuleEncodingSettings 
:
{ before(grammarAccess.getEncodingSettingsRule()); }
	 ruleEncodingSettings
{ after(grammarAccess.getEncodingSettingsRule()); } 
	 EOF 
;

// Rule EncodingSettings
ruleEncodingSettings
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEncodingSettingsAccess().getGroup()); }
(rule__EncodingSettings__Group__0)
{ after(grammarAccess.getEncodingSettingsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSensorDataDescription
entryRuleSensorDataDescription 
:
{ before(grammarAccess.getSensorDataDescriptionRule()); }
	 ruleSensorDataDescription
{ after(grammarAccess.getSensorDataDescriptionRule()); } 
	 EOF 
;

// Rule SensorDataDescription
ruleSensorDataDescription
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSensorDataDescriptionAccess().getGroup()); }
(rule__SensorDataDescription__Group__0)
{ after(grammarAccess.getSensorDataDescriptionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDataSet
entryRuleDataSet 
:
{ before(grammarAccess.getDataSetRule()); }
	 ruleDataSet
{ after(grammarAccess.getDataSetRule()); } 
	 EOF 
;

// Rule DataSet
ruleDataSet
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDataSetAccess().getGroup()); }
(rule__DataSet__Group__0)
{ after(grammarAccess.getDataSetAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleData
entryRuleData 
:
{ before(grammarAccess.getDataRule()); }
	 ruleData
{ after(grammarAccess.getDataRule()); } 
	 EOF 
;

// Rule Data
ruleData
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDataAccess().getAlternatives()); }
(rule__Data__Alternatives)
{ after(grammarAccess.getDataAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMeasurementData
entryRuleMeasurementData 
:
{ before(grammarAccess.getMeasurementDataRule()); }
	 ruleMeasurementData
{ after(grammarAccess.getMeasurementDataRule()); } 
	 EOF 
;

// Rule MeasurementData
ruleMeasurementData
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMeasurementDataAccess().getGroup()); }
(rule__MeasurementData__Group__0)
{ after(grammarAccess.getMeasurementDataAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNonMeasurementData
entryRuleNonMeasurementData 
:
{ before(grammarAccess.getNonMeasurementDataRule()); }
	 ruleNonMeasurementData
{ after(grammarAccess.getNonMeasurementDataRule()); } 
	 EOF 
;

// Rule NonMeasurementData
ruleNonMeasurementData
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNonMeasurementDataAccess().getGroup()); }
(rule__NonMeasurementData__Group__0)
{ after(grammarAccess.getNonMeasurementDataAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDataAdjustment
entryRuleDataAdjustment 
:
{ before(grammarAccess.getDataAdjustmentRule()); }
	 ruleDataAdjustment
{ after(grammarAccess.getDataAdjustmentRule()); } 
	 EOF 
;

// Rule DataAdjustment
ruleDataAdjustment
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDataAdjustmentAccess().getAlternatives()); }
(rule__DataAdjustment__Alternatives)
{ after(grammarAccess.getDataAdjustmentAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDataRange
entryRuleDataRange 
:
{ before(grammarAccess.getDataRangeRule()); }
	 ruleDataRange
{ after(grammarAccess.getDataRangeRule()); } 
	 EOF 
;

// Rule DataRange
ruleDataRange
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDataRangeAccess().getGroup()); }
(rule__DataRange__Group__0)
{ after(grammarAccess.getDataRangeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInterval
entryRuleInterval 
:
{ before(grammarAccess.getIntervalRule()); }
	 ruleInterval
{ after(grammarAccess.getIntervalRule()); } 
	 EOF 
;

// Rule Interval
ruleInterval
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIntervalAccess().getGroup()); }
(rule__Interval__Group__0)
{ after(grammarAccess.getIntervalAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDataConversion
entryRuleDataConversion 
:
{ before(grammarAccess.getDataConversionRule()); }
	 ruleDataConversion
{ after(grammarAccess.getDataConversionRule()); } 
	 EOF 
;

// Rule DataConversion
ruleDataConversion
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDataConversionAccess().getLinearDataConversionParserRuleCall()); }
	ruleLinearDataConversion
{ after(grammarAccess.getDataConversionAccess().getLinearDataConversionParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLinearDataConversion
entryRuleLinearDataConversion 
:
{ before(grammarAccess.getLinearDataConversionRule()); }
	 ruleLinearDataConversion
{ after(grammarAccess.getLinearDataConversionRule()); } 
	 EOF 
;

// Rule LinearDataConversion
ruleLinearDataConversion
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLinearDataConversionAccess().getAlternatives()); }
(rule__LinearDataConversion__Alternatives)
{ after(grammarAccess.getLinearDataConversionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDOUBLE
entryRuleDOUBLE 
:
{ before(grammarAccess.getDOUBLERule()); }
	 ruleDOUBLE
{ after(grammarAccess.getDOUBLERule()); } 
	 EOF 
;

// Rule DOUBLE
ruleDOUBLE
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDOUBLEAccess().getGroup()); }
(rule__DOUBLE__Group__0)
{ after(grammarAccess.getDOUBLEAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBOOLEAN
entryRuleBOOLEAN 
:
{ before(grammarAccess.getBOOLEANRule()); }
	 ruleBOOLEAN
{ after(grammarAccess.getBOOLEANRule()); } 
	 EOF 
;

// Rule BOOLEAN
ruleBOOLEAN
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBOOLEANAccess().getAlternatives()); }
(rule__BOOLEAN__Alternatives)
{ after(grammarAccess.getBOOLEANAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}




// Rule Coding
ruleCoding
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCodingAccess().getAlternatives()); }
(rule__Coding__Alternatives)
{ after(grammarAccess.getCodingAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule Endianness
ruleEndianness
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEndiannessAccess().getAlternatives()); }
(rule__Endianness__Alternatives)
{ after(grammarAccess.getEndiannessAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule DataType
ruleDataType
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeAccess().getAlternatives()); }
(rule__DataType__Alternatives)
{ after(grammarAccess.getDataTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__IdentifiableElement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdentifiableElementAccess().getNamedElementParserRuleCall_0()); }
	ruleNamedElement
{ after(grammarAccess.getIdentifiableElementAccess().getNamedElementParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getIdentifiableElementAccess().getEncodingSettingsParserRuleCall_1()); }
	ruleEncodingSettings
{ after(grammarAccess.getIdentifiableElementAccess().getEncodingSettingsParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getIdentifiableElementAccess().getSensorDataDescriptionParserRuleCall_2()); }
	ruleSensorDataDescription
{ after(grammarAccess.getIdentifiableElementAccess().getSensorDataDescriptionParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getIdentifiableElementAccess().getDataAdjustmentParserRuleCall_3()); }
	ruleDataAdjustment
{ after(grammarAccess.getIdentifiableElementAccess().getDataAdjustmentParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getIdentifiableElementAccess().getIntervalParserRuleCall_4()); }
	ruleInterval
{ after(grammarAccess.getIdentifiableElementAccess().getIntervalParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NamedElement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedElementAccess().getSensorInterfaceParserRuleCall_0()); }
	ruleSensorInterface
{ after(grammarAccess.getNamedElementAccess().getSensorInterfaceParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getNamedElementAccess().getDataSetParserRuleCall_1()); }
	ruleDataSet
{ after(grammarAccess.getNamedElementAccess().getDataSetParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getNamedElementAccess().getDataParserRuleCall_2()); }
	ruleData
{ after(grammarAccess.getNamedElementAccess().getDataParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Data__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataAccess().getMeasurementDataParserRuleCall_0()); }
	ruleMeasurementData
{ after(grammarAccess.getDataAccess().getMeasurementDataParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getDataAccess().getNonMeasurementDataParserRuleCall_1()); }
	ruleNonMeasurementData
{ after(grammarAccess.getDataAccess().getNonMeasurementDataParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataAdjustment__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataAdjustmentAccess().getDataRangeParserRuleCall_0()); }
	ruleDataRange
{ after(grammarAccess.getDataAdjustmentAccess().getDataRangeParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getDataAdjustmentAccess().getDataConversionParserRuleCall_1()); }
	ruleDataConversion
{ after(grammarAccess.getDataAdjustmentAccess().getDataConversionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LinearDataConversion__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinearDataConversionAccess().getGroup_0()); }
(rule__LinearDataConversion__Group_0__0)
{ after(grammarAccess.getLinearDataConversionAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getLinearDataConversionAccess().getGroup_1()); }
(rule__LinearDataConversion__Group_1__0)
{ after(grammarAccess.getLinearDataConversionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BOOLEAN__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBOOLEANAccess().getTrueKeyword_0()); }

	'true' 

{ after(grammarAccess.getBOOLEANAccess().getTrueKeyword_0()); }
)

    |(
{ before(grammarAccess.getBOOLEANAccess().getFalseKeyword_1()); }

	'false' 

{ after(grammarAccess.getBOOLEANAccess().getFalseKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Coding__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCodingAccess().getSENSIDL_BINARYEnumLiteralDeclaration_0()); }
(	'SENSIDL_BINARY' 
)
{ after(grammarAccess.getCodingAccess().getSENSIDL_BINARYEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getCodingAccess().getSENSIDL_JSONEnumLiteralDeclaration_1()); }
(	'SENSIDL_JSON' 
)
{ after(grammarAccess.getCodingAccess().getSENSIDL_JSONEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Endianness__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEndiannessAccess().getBIG_ENDIANEnumLiteralDeclaration_0()); }
(	'BIG_ENDIAN' 
)
{ after(grammarAccess.getEndiannessAccess().getBIG_ENDIANEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getEndiannessAccess().getLITTLE_ENDIANEnumLiteralDeclaration_1()); }
(	'LITTLE_ENDIAN' 
)
{ after(grammarAccess.getEndiannessAccess().getLITTLE_ENDIANEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeAccess().getSIGNED_CHAREnumLiteralDeclaration_0()); }
(	'SIGNED_CHAR' 
)
{ after(grammarAccess.getDataTypeAccess().getSIGNED_CHAREnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getDataTypeAccess().getUNSIGNED_CHAREnumLiteralDeclaration_1()); }
(	'UNSIGNED_CHAR' 
)
{ after(grammarAccess.getDataTypeAccess().getUNSIGNED_CHAREnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getDataTypeAccess().getSIGNED_SHORTEnumLiteralDeclaration_2()); }
(	'SIGNED_SHORT' 
)
{ after(grammarAccess.getDataTypeAccess().getSIGNED_SHORTEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getDataTypeAccess().getUNSIGNED_SHORTEnumLiteralDeclaration_3()); }
(	'UNSIGNED_SHORT' 
)
{ after(grammarAccess.getDataTypeAccess().getUNSIGNED_SHORTEnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getDataTypeAccess().getSIGNED_LONGEnumLiteralDeclaration_4()); }
(	'SIGNED_LONG' 
)
{ after(grammarAccess.getDataTypeAccess().getSIGNED_LONGEnumLiteralDeclaration_4()); }
)

    |(
{ before(grammarAccess.getDataTypeAccess().getUNSIGNED_LONGEnumLiteralDeclaration_5()); }
(	'UNSIGNED_LONG' 
)
{ after(grammarAccess.getDataTypeAccess().getUNSIGNED_LONGEnumLiteralDeclaration_5()); }
)

    |(
{ before(grammarAccess.getDataTypeAccess().getSIGNED_LONG_LONGEnumLiteralDeclaration_6()); }
(	'SIGNED_LONG_LONG' 
)
{ after(grammarAccess.getDataTypeAccess().getSIGNED_LONG_LONGEnumLiteralDeclaration_6()); }
)

    |(
{ before(grammarAccess.getDataTypeAccess().getUNSIGNED_LONG_LONGEnumLiteralDeclaration_7()); }
(	'UNSIGNED_LONG_LONG' 
)
{ after(grammarAccess.getDataTypeAccess().getUNSIGNED_LONG_LONGEnumLiteralDeclaration_7()); }
)

    |(
{ before(grammarAccess.getDataTypeAccess().getFLOATEnumLiteralDeclaration_8()); }
(	'FLOAT' 
)
{ after(grammarAccess.getDataTypeAccess().getFLOATEnumLiteralDeclaration_8()); }
)

    |(
{ before(grammarAccess.getDataTypeAccess().getDOUBLEEnumLiteralDeclaration_9()); }
(	'DOUBLE' 
)
{ after(grammarAccess.getDataTypeAccess().getDOUBLEEnumLiteralDeclaration_9()); }
)

    |(
{ before(grammarAccess.getDataTypeAccess().getLONG_DOUBLEEnumLiteralDeclaration_10()); }
(	'LONG_DOUBLE' 
)
{ after(grammarAccess.getDataTypeAccess().getLONG_DOUBLEEnumLiteralDeclaration_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__SensorInterface__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SensorInterface__Group__0__Impl
	rule__SensorInterface__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorInterface__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSensorInterfaceAccess().getSensorInterfaceKeyword_0()); }

	'sensorInterface' 

{ after(grammarAccess.getSensorInterfaceAccess().getSensorInterfaceKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SensorInterface__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SensorInterface__Group__1__Impl
	rule__SensorInterface__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorInterface__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSensorInterfaceAccess().getNameAssignment_1()); }
(rule__SensorInterface__NameAssignment_1)
{ after(grammarAccess.getSensorInterfaceAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SensorInterface__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SensorInterface__Group__2__Impl
	rule__SensorInterface__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorInterface__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSensorInterfaceAccess().getDescriptionAssignment_2()); }
(rule__SensorInterface__DescriptionAssignment_2)?
{ after(grammarAccess.getSensorInterfaceAccess().getDescriptionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SensorInterface__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SensorInterface__Group__3__Impl
	rule__SensorInterface__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorInterface__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSensorInterfaceAccess().getGroup_3()); }
(rule__SensorInterface__Group_3__0)?
{ after(grammarAccess.getSensorInterfaceAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SensorInterface__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SensorInterface__Group__4__Impl
	rule__SensorInterface__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorInterface__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSensorInterfaceAccess().getLeftCurlyBracketKeyword_4()); }

	'{' 

{ after(grammarAccess.getSensorInterfaceAccess().getLeftCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SensorInterface__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SensorInterface__Group__5__Impl
	rule__SensorInterface__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorInterface__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSensorInterfaceAccess().getEncodingSettingsAssignment_5()); }
(rule__SensorInterface__EncodingSettingsAssignment_5)
{ after(grammarAccess.getSensorInterfaceAccess().getEncodingSettingsAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SensorInterface__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SensorInterface__Group__6__Impl
	rule__SensorInterface__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorInterface__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSensorInterfaceAccess().getDataDescriptionAssignment_6()); }
(rule__SensorInterface__DataDescriptionAssignment_6)
{ after(grammarAccess.getSensorInterfaceAccess().getDataDescriptionAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SensorInterface__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SensorInterface__Group__7__Impl
	rule__SensorInterface__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorInterface__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSensorInterfaceAccess().getRightCurlyBracketKeyword_7()); }

	'}' 

{ after(grammarAccess.getSensorInterfaceAccess().getRightCurlyBracketKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SensorInterface__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SensorInterface__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorInterface__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSensorInterfaceAccess().getSemicolonKeyword_8()); }

	';' 

{ after(grammarAccess.getSensorInterfaceAccess().getSemicolonKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__SensorInterface__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SensorInterface__Group_3__0__Impl
	rule__SensorInterface__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorInterface__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSensorInterfaceAccess().getWithKeyword_3_0()); }

	'with' 

{ after(grammarAccess.getSensorInterfaceAccess().getWithKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SensorInterface__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SensorInterface__Group_3__1__Impl
	rule__SensorInterface__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorInterface__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSensorInterfaceAccess().getIdentifierKeyword_3_1()); }

	'identifier' 

{ after(grammarAccess.getSensorInterfaceAccess().getIdentifierKeyword_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SensorInterface__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SensorInterface__Group_3__2__Impl
	rule__SensorInterface__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorInterface__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSensorInterfaceAccess().getColonKeyword_3_2()); }

	':' 

{ after(grammarAccess.getSensorInterfaceAccess().getColonKeyword_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SensorInterface__Group_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SensorInterface__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorInterface__Group_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSensorInterfaceAccess().getIDAssignment_3_3()); }
(rule__SensorInterface__IDAssignment_3_3)
{ after(grammarAccess.getSensorInterfaceAccess().getIDAssignment_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__EncodingSettings__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EncodingSettings__Group__0__Impl
	rule__EncodingSettings__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EncodingSettings__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEncodingSettingsAccess().getEncodingKeyword_0()); }

	'encoding' 

{ after(grammarAccess.getEncodingSettingsAccess().getEncodingKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EncodingSettings__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EncodingSettings__Group__1__Impl
	rule__EncodingSettings__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EncodingSettings__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEncodingSettingsAccess().getCodingAssignment_1()); }
(rule__EncodingSettings__CodingAssignment_1)
{ after(grammarAccess.getEncodingSettingsAccess().getCodingAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EncodingSettings__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EncodingSettings__Group__2__Impl
	rule__EncodingSettings__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EncodingSettings__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEncodingSettingsAccess().getWithKeyword_2()); }

	'with' 

{ after(grammarAccess.getEncodingSettingsAccess().getWithKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EncodingSettings__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EncodingSettings__Group__3__Impl
	rule__EncodingSettings__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__EncodingSettings__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEncodingSettingsAccess().getEndiannessAssignment_3()); }
(rule__EncodingSettings__EndiannessAssignment_3)
{ after(grammarAccess.getEncodingSettingsAccess().getEndiannessAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EncodingSettings__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EncodingSettings__Group__4__Impl
	rule__EncodingSettings__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__EncodingSettings__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEncodingSettingsAccess().getAlignmentKeyword_4()); }

	'alignment' 

{ after(grammarAccess.getEncodingSettingsAccess().getAlignmentKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EncodingSettings__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EncodingSettings__Group__5__Impl
	rule__EncodingSettings__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__EncodingSettings__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEncodingSettingsAccess().getAlignmentAssignment_5()); }
(rule__EncodingSettings__AlignmentAssignment_5)
{ after(grammarAccess.getEncodingSettingsAccess().getAlignmentAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EncodingSettings__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EncodingSettings__Group__6__Impl
	rule__EncodingSettings__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__EncodingSettings__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEncodingSettingsAccess().getBITKeyword_6()); }

	'BIT' 

{ after(grammarAccess.getEncodingSettingsAccess().getBITKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EncodingSettings__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EncodingSettings__Group__7__Impl
	rule__EncodingSettings__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__EncodingSettings__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEncodingSettingsAccess().getGroup_7()); }
(rule__EncodingSettings__Group_7__0)?
{ after(grammarAccess.getEncodingSettingsAccess().getGroup_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EncodingSettings__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EncodingSettings__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EncodingSettings__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEncodingSettingsAccess().getSemicolonKeyword_8()); }

	';' 

{ after(grammarAccess.getEncodingSettingsAccess().getSemicolonKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__EncodingSettings__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EncodingSettings__Group_7__0__Impl
	rule__EncodingSettings__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EncodingSettings__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEncodingSettingsAccess().getWithKeyword_7_0()); }

	'with' 

{ after(grammarAccess.getEncodingSettingsAccess().getWithKeyword_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EncodingSettings__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EncodingSettings__Group_7__1__Impl
	rule__EncodingSettings__Group_7__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EncodingSettings__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEncodingSettingsAccess().getIdentifierKeyword_7_1()); }

	'identifier' 

{ after(grammarAccess.getEncodingSettingsAccess().getIdentifierKeyword_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EncodingSettings__Group_7__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EncodingSettings__Group_7__2__Impl
	rule__EncodingSettings__Group_7__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EncodingSettings__Group_7__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEncodingSettingsAccess().getColonKeyword_7_2()); }

	':' 

{ after(grammarAccess.getEncodingSettingsAccess().getColonKeyword_7_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EncodingSettings__Group_7__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EncodingSettings__Group_7__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EncodingSettings__Group_7__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEncodingSettingsAccess().getIDAssignment_7_3()); }
(rule__EncodingSettings__IDAssignment_7_3)
{ after(grammarAccess.getEncodingSettingsAccess().getIDAssignment_7_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__SensorDataDescription__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SensorDataDescription__Group__0__Impl
	rule__SensorDataDescription__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorDataDescription__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSensorDataDescriptionAccess().getSensorDataKeyword_0()); }

	'sensorData' 

{ after(grammarAccess.getSensorDataDescriptionAccess().getSensorDataKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SensorDataDescription__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SensorDataDescription__Group__1__Impl
	rule__SensorDataDescription__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorDataDescription__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSensorDataDescriptionAccess().getSensorDataDescriptionAction_1()); }
(

)
{ after(grammarAccess.getSensorDataDescriptionAccess().getSensorDataDescriptionAction_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SensorDataDescription__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SensorDataDescription__Group__2__Impl
	rule__SensorDataDescription__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorDataDescription__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSensorDataDescriptionAccess().getGroup_2()); }
(rule__SensorDataDescription__Group_2__0)?
{ after(grammarAccess.getSensorDataDescriptionAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SensorDataDescription__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SensorDataDescription__Group__3__Impl
	rule__SensorDataDescription__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorDataDescription__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSensorDataDescriptionAccess().getLeftCurlyBracketKeyword_3()); }

	'{' 

{ after(grammarAccess.getSensorDataDescriptionAccess().getLeftCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SensorDataDescription__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SensorDataDescription__Group__4__Impl
	rule__SensorDataDescription__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorDataDescription__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSensorDataDescriptionAccess().getDataSetsAssignment_4()); }
(rule__SensorDataDescription__DataSetsAssignment_4)*
{ after(grammarAccess.getSensorDataDescriptionAccess().getDataSetsAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SensorDataDescription__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SensorDataDescription__Group__5__Impl
	rule__SensorDataDescription__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorDataDescription__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSensorDataDescriptionAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getSensorDataDescriptionAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SensorDataDescription__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SensorDataDescription__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorDataDescription__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSensorDataDescriptionAccess().getSemicolonKeyword_6()); }

	';' 

{ after(grammarAccess.getSensorDataDescriptionAccess().getSemicolonKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__SensorDataDescription__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SensorDataDescription__Group_2__0__Impl
	rule__SensorDataDescription__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorDataDescription__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSensorDataDescriptionAccess().getWithKeyword_2_0()); }

	'with' 

{ after(grammarAccess.getSensorDataDescriptionAccess().getWithKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SensorDataDescription__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SensorDataDescription__Group_2__1__Impl
	rule__SensorDataDescription__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorDataDescription__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSensorDataDescriptionAccess().getIdentifierKeyword_2_1()); }

	'identifier' 

{ after(grammarAccess.getSensorDataDescriptionAccess().getIdentifierKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SensorDataDescription__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SensorDataDescription__Group_2__2__Impl
	rule__SensorDataDescription__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorDataDescription__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSensorDataDescriptionAccess().getColonKeyword_2_2()); }

	':' 

{ after(grammarAccess.getSensorDataDescriptionAccess().getColonKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SensorDataDescription__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SensorDataDescription__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorDataDescription__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSensorDataDescriptionAccess().getIDAssignment_2_3()); }
(rule__SensorDataDescription__IDAssignment_2_3)
{ after(grammarAccess.getSensorDataDescriptionAccess().getIDAssignment_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__DataSet__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataSet__Group__0__Impl
	rule__DataSet__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataSet__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataSetAccess().getDataSetKeyword_0()); }

	'dataSet' 

{ after(grammarAccess.getDataSetAccess().getDataSetKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataSet__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataSet__Group__1__Impl
	rule__DataSet__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DataSet__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataSetAccess().getNameAssignment_1()); }
(rule__DataSet__NameAssignment_1)
{ after(grammarAccess.getDataSetAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataSet__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataSet__Group__2__Impl
	rule__DataSet__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DataSet__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataSetAccess().getGroup_2()); }
(rule__DataSet__Group_2__0)?
{ after(grammarAccess.getDataSetAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataSet__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataSet__Group__3__Impl
	rule__DataSet__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DataSet__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataSetAccess().getDescriptionAssignment_3()); }
(rule__DataSet__DescriptionAssignment_3)?
{ after(grammarAccess.getDataSetAccess().getDescriptionAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataSet__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataSet__Group__4__Impl
	rule__DataSet__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__DataSet__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataSetAccess().getLeftCurlyBracketKeyword_4()); }

	'{' 

{ after(grammarAccess.getDataSetAccess().getLeftCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataSet__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataSet__Group__5__Impl
	rule__DataSet__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__DataSet__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataSetAccess().getSubDataSetsAssignment_5()); }
(rule__DataSet__SubDataSetsAssignment_5)?
{ after(grammarAccess.getDataSetAccess().getSubDataSetsAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataSet__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataSet__Group__6__Impl
	rule__DataSet__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__DataSet__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataSetAccess().getDataAssignment_6()); }
(rule__DataSet__DataAssignment_6)*
{ after(grammarAccess.getDataSetAccess().getDataAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataSet__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataSet__Group__7__Impl
	rule__DataSet__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__DataSet__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataSetAccess().getRightCurlyBracketKeyword_7()); }

	'}' 

{ after(grammarAccess.getDataSetAccess().getRightCurlyBracketKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataSet__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataSet__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataSet__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataSetAccess().getSemicolonKeyword_8()); }

	';' 

{ after(grammarAccess.getDataSetAccess().getSemicolonKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__DataSet__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataSet__Group_2__0__Impl
	rule__DataSet__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataSet__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataSetAccess().getWithKeyword_2_0()); }

	'with' 

{ after(grammarAccess.getDataSetAccess().getWithKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataSet__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataSet__Group_2__1__Impl
	rule__DataSet__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DataSet__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataSetAccess().getIdentifierKeyword_2_1()); }

	'identifier' 

{ after(grammarAccess.getDataSetAccess().getIdentifierKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataSet__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataSet__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataSet__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataSetAccess().getIDAssignment_2_2()); }
(rule__DataSet__IDAssignment_2_2)
{ after(grammarAccess.getDataSetAccess().getIDAssignment_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__MeasurementData__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MeasurementData__Group__0__Impl
	rule__MeasurementData__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MeasurementData__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMeasurementDataAccess().getNameAssignment_0()); }
(rule__MeasurementData__NameAssignment_0)
{ after(grammarAccess.getMeasurementDataAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MeasurementData__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MeasurementData__Group__1__Impl
	rule__MeasurementData__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MeasurementData__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMeasurementDataAccess().getAsKeyword_1()); }

	'as' 

{ after(grammarAccess.getMeasurementDataAccess().getAsKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MeasurementData__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MeasurementData__Group__2__Impl
	rule__MeasurementData__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MeasurementData__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMeasurementDataAccess().getDataTypeAssignment_2()); }
(rule__MeasurementData__DataTypeAssignment_2)
{ after(grammarAccess.getMeasurementDataAccess().getDataTypeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MeasurementData__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MeasurementData__Group__3__Impl
	rule__MeasurementData__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MeasurementData__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMeasurementDataAccess().getInKeyword_3()); }

	'in' 

{ after(grammarAccess.getMeasurementDataAccess().getInKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MeasurementData__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MeasurementData__Group__4__Impl
	rule__MeasurementData__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__MeasurementData__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMeasurementDataAccess().getUnitAssignment_4()); }
(rule__MeasurementData__UnitAssignment_4)
{ after(grammarAccess.getMeasurementDataAccess().getUnitAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MeasurementData__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MeasurementData__Group__5__Impl
	rule__MeasurementData__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__MeasurementData__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMeasurementDataAccess().getGroup_5()); }
(rule__MeasurementData__Group_5__0)?
{ after(grammarAccess.getMeasurementDataAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MeasurementData__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MeasurementData__Group__6__Impl
	rule__MeasurementData__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__MeasurementData__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMeasurementDataAccess().getGroup_6()); }
(rule__MeasurementData__Group_6__0)?
{ after(grammarAccess.getMeasurementDataAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MeasurementData__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MeasurementData__Group__7__Impl
	rule__MeasurementData__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__MeasurementData__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMeasurementDataAccess().getDescriptionAssignment_7()); }
(rule__MeasurementData__DescriptionAssignment_7)?
{ after(grammarAccess.getMeasurementDataAccess().getDescriptionAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MeasurementData__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MeasurementData__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MeasurementData__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMeasurementDataAccess().getSemicolonKeyword_8()); }

	';' 

{ after(grammarAccess.getMeasurementDataAccess().getSemicolonKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__MeasurementData__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MeasurementData__Group_5__0__Impl
	rule__MeasurementData__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MeasurementData__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMeasurementDataAccess().getWithKeyword_5_0()); }

	'with' 

{ after(grammarAccess.getMeasurementDataAccess().getWithKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MeasurementData__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MeasurementData__Group_5__1__Impl
	rule__MeasurementData__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MeasurementData__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMeasurementDataAccess().getIdentifierKeyword_5_1()); }

	'identifier' 

{ after(grammarAccess.getMeasurementDataAccess().getIdentifierKeyword_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MeasurementData__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MeasurementData__Group_5__2__Impl
	rule__MeasurementData__Group_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MeasurementData__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMeasurementDataAccess().getColonKeyword_5_2()); }

	':' 

{ after(grammarAccess.getMeasurementDataAccess().getColonKeyword_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MeasurementData__Group_5__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MeasurementData__Group_5__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MeasurementData__Group_5__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMeasurementDataAccess().getIDAssignment_5_3()); }
(rule__MeasurementData__IDAssignment_5_3)
{ after(grammarAccess.getMeasurementDataAccess().getIDAssignment_5_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__MeasurementData__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MeasurementData__Group_6__0__Impl
	rule__MeasurementData__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MeasurementData__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMeasurementDataAccess().getAdjustedKeyword_6_0()); }

	'adjusted' 

{ after(grammarAccess.getMeasurementDataAccess().getAdjustedKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MeasurementData__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MeasurementData__Group_6__1__Impl
	rule__MeasurementData__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MeasurementData__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMeasurementDataAccess().getByKeyword_6_1()); }

	'by' 

{ after(grammarAccess.getMeasurementDataAccess().getByKeyword_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MeasurementData__Group_6__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MeasurementData__Group_6__2__Impl
	rule__MeasurementData__Group_6__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MeasurementData__Group_6__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMeasurementDataAccess().getColonKeyword_6_2()); }

	':' 

{ after(grammarAccess.getMeasurementDataAccess().getColonKeyword_6_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MeasurementData__Group_6__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MeasurementData__Group_6__3__Impl
	rule__MeasurementData__Group_6__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MeasurementData__Group_6__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMeasurementDataAccess().getAdjustmentsAssignment_6_3()); }
(rule__MeasurementData__AdjustmentsAssignment_6_3)
{ after(grammarAccess.getMeasurementDataAccess().getAdjustmentsAssignment_6_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MeasurementData__Group_6__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MeasurementData__Group_6__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MeasurementData__Group_6__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMeasurementDataAccess().getGroup_6_4()); }
(rule__MeasurementData__Group_6_4__0)*
{ after(grammarAccess.getMeasurementDataAccess().getGroup_6_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__MeasurementData__Group_6_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MeasurementData__Group_6_4__0__Impl
	rule__MeasurementData__Group_6_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MeasurementData__Group_6_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMeasurementDataAccess().getCommaKeyword_6_4_0()); }

	',' 

{ after(grammarAccess.getMeasurementDataAccess().getCommaKeyword_6_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MeasurementData__Group_6_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MeasurementData__Group_6_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MeasurementData__Group_6_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMeasurementDataAccess().getAdjustmentsAssignment_6_4_1()); }
(rule__MeasurementData__AdjustmentsAssignment_6_4_1)
{ after(grammarAccess.getMeasurementDataAccess().getAdjustmentsAssignment_6_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NonMeasurementData__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NonMeasurementData__Group__0__Impl
	rule__NonMeasurementData__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NonMeasurementData__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNonMeasurementDataAccess().getNameAssignment_0()); }
(rule__NonMeasurementData__NameAssignment_0)
{ after(grammarAccess.getNonMeasurementDataAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NonMeasurementData__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NonMeasurementData__Group__1__Impl
	rule__NonMeasurementData__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NonMeasurementData__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNonMeasurementDataAccess().getAsKeyword_1()); }

	'as' 

{ after(grammarAccess.getNonMeasurementDataAccess().getAsKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NonMeasurementData__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NonMeasurementData__Group__2__Impl
	rule__NonMeasurementData__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NonMeasurementData__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNonMeasurementDataAccess().getDataTypeAssignment_2()); }
(rule__NonMeasurementData__DataTypeAssignment_2)
{ after(grammarAccess.getNonMeasurementDataAccess().getDataTypeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NonMeasurementData__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NonMeasurementData__Group__3__Impl
	rule__NonMeasurementData__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__NonMeasurementData__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNonMeasurementDataAccess().getConstantKeyword_3()); }

	'constant' 

{ after(grammarAccess.getNonMeasurementDataAccess().getConstantKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NonMeasurementData__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NonMeasurementData__Group__4__Impl
	rule__NonMeasurementData__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__NonMeasurementData__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNonMeasurementDataAccess().getEqualsSignKeyword_4()); }

	'=' 

{ after(grammarAccess.getNonMeasurementDataAccess().getEqualsSignKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NonMeasurementData__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NonMeasurementData__Group__5__Impl
	rule__NonMeasurementData__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__NonMeasurementData__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNonMeasurementDataAccess().getConstantAssignment_5()); }
(rule__NonMeasurementData__ConstantAssignment_5)
{ after(grammarAccess.getNonMeasurementDataAccess().getConstantAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NonMeasurementData__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NonMeasurementData__Group__6__Impl
	rule__NonMeasurementData__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__NonMeasurementData__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNonMeasurementDataAccess().getGroup_6()); }
(rule__NonMeasurementData__Group_6__0)?
{ after(grammarAccess.getNonMeasurementDataAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NonMeasurementData__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NonMeasurementData__Group__7__Impl
	rule__NonMeasurementData__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__NonMeasurementData__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNonMeasurementDataAccess().getGroup_7()); }
(rule__NonMeasurementData__Group_7__0)?
{ after(grammarAccess.getNonMeasurementDataAccess().getGroup_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NonMeasurementData__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NonMeasurementData__Group__8__Impl
	rule__NonMeasurementData__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__NonMeasurementData__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNonMeasurementDataAccess().getDescriptionAssignment_8()); }
(rule__NonMeasurementData__DescriptionAssignment_8)?
{ after(grammarAccess.getNonMeasurementDataAccess().getDescriptionAssignment_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NonMeasurementData__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NonMeasurementData__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NonMeasurementData__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNonMeasurementDataAccess().getSemicolonKeyword_9()); }

	';' 

{ after(grammarAccess.getNonMeasurementDataAccess().getSemicolonKeyword_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}






















rule__NonMeasurementData__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NonMeasurementData__Group_6__0__Impl
	rule__NonMeasurementData__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NonMeasurementData__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNonMeasurementDataAccess().getValueKeyword_6_0()); }

	'value' 

{ after(grammarAccess.getNonMeasurementDataAccess().getValueKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NonMeasurementData__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NonMeasurementData__Group_6__1__Impl
	rule__NonMeasurementData__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NonMeasurementData__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNonMeasurementDataAccess().getEqualsSignKeyword_6_1()); }

	'=' 

{ after(grammarAccess.getNonMeasurementDataAccess().getEqualsSignKeyword_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NonMeasurementData__Group_6__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NonMeasurementData__Group_6__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NonMeasurementData__Group_6__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNonMeasurementDataAccess().getValueAssignment_6_2()); }
(rule__NonMeasurementData__ValueAssignment_6_2)
{ after(grammarAccess.getNonMeasurementDataAccess().getValueAssignment_6_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__NonMeasurementData__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NonMeasurementData__Group_7__0__Impl
	rule__NonMeasurementData__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NonMeasurementData__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNonMeasurementDataAccess().getWithKeyword_7_0()); }

	'with' 

{ after(grammarAccess.getNonMeasurementDataAccess().getWithKeyword_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NonMeasurementData__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NonMeasurementData__Group_7__1__Impl
	rule__NonMeasurementData__Group_7__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NonMeasurementData__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNonMeasurementDataAccess().getIdentifierKeyword_7_1()); }

	'identifier' 

{ after(grammarAccess.getNonMeasurementDataAccess().getIdentifierKeyword_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NonMeasurementData__Group_7__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NonMeasurementData__Group_7__2__Impl
	rule__NonMeasurementData__Group_7__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NonMeasurementData__Group_7__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNonMeasurementDataAccess().getColonKeyword_7_2()); }

	':' 

{ after(grammarAccess.getNonMeasurementDataAccess().getColonKeyword_7_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NonMeasurementData__Group_7__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NonMeasurementData__Group_7__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NonMeasurementData__Group_7__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNonMeasurementDataAccess().getIDAssignment_7_3()); }
(rule__NonMeasurementData__IDAssignment_7_3)
{ after(grammarAccess.getNonMeasurementDataAccess().getIDAssignment_7_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__DataRange__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataRange__Group__0__Impl
	rule__DataRange__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataRange__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataRangeAccess().getWithKeyword_0()); }

	'with' 

{ after(grammarAccess.getDataRangeAccess().getWithKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataRange__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataRange__Group__1__Impl
	rule__DataRange__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DataRange__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataRangeAccess().getRangeKeyword_1()); }

	'range' 

{ after(grammarAccess.getDataRangeAccess().getRangeKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataRange__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataRange__Group__2__Impl
	rule__DataRange__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DataRange__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataRangeAccess().getRangeAssignment_2()); }
(rule__DataRange__RangeAssignment_2)
{ after(grammarAccess.getDataRangeAccess().getRangeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataRange__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataRange__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataRange__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataRangeAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getDataRangeAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Interval__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Interval__Group__0__Impl
	rule__Interval__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Interval__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntervalAccess().getLowerBoundAssignment_0()); }
(rule__Interval__LowerBoundAssignment_0)
{ after(grammarAccess.getIntervalAccess().getLowerBoundAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Interval__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Interval__Group__1__Impl
	rule__Interval__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Interval__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntervalAccess().getFullStopFullStopFullStopKeyword_1()); }

	'...' 

{ after(grammarAccess.getIntervalAccess().getFullStopFullStopFullStopKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Interval__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Interval__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Interval__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntervalAccess().getUpperBoundAssignment_2()); }
(rule__Interval__UpperBoundAssignment_2)
{ after(grammarAccess.getIntervalAccess().getUpperBoundAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__LinearDataConversion__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LinearDataConversion__Group_0__0__Impl
	rule__LinearDataConversion__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LinearDataConversion__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinearDataConversionAccess().getWithKeyword_0_0()); }

	'with' 

{ after(grammarAccess.getLinearDataConversionAccess().getWithKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LinearDataConversion__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LinearDataConversion__Group_0__1__Impl
	rule__LinearDataConversion__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LinearDataConversion__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinearDataConversionAccess().getScalingFactorKeyword_0_1()); }

	'scaling factor' 

{ after(grammarAccess.getLinearDataConversionAccess().getScalingFactorKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LinearDataConversion__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LinearDataConversion__Group_0__2__Impl
	rule__LinearDataConversion__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LinearDataConversion__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinearDataConversionAccess().getColonKeyword_0_2()); }

	':' 

{ after(grammarAccess.getLinearDataConversionAccess().getColonKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LinearDataConversion__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LinearDataConversion__Group_0__3__Impl
	rule__LinearDataConversion__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__LinearDataConversion__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinearDataConversionAccess().getScalingFactorAssignment_0_3()); }
(rule__LinearDataConversion__ScalingFactorAssignment_0_3)
{ after(grammarAccess.getLinearDataConversionAccess().getScalingFactorAssignment_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LinearDataConversion__Group_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LinearDataConversion__Group_0__4__Impl
	rule__LinearDataConversion__Group_0__5
;
finally {
	restoreStackSize(stackSize);
}

rule__LinearDataConversion__Group_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinearDataConversionAccess().getAndKeyword_0_4()); }

	'and' 

{ after(grammarAccess.getLinearDataConversionAccess().getAndKeyword_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LinearDataConversion__Group_0__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LinearDataConversion__Group_0__5__Impl
	rule__LinearDataConversion__Group_0__6
;
finally {
	restoreStackSize(stackSize);
}

rule__LinearDataConversion__Group_0__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinearDataConversionAccess().getOffsetKeyword_0_5()); }

	'offset' 

{ after(grammarAccess.getLinearDataConversionAccess().getOffsetKeyword_0_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LinearDataConversion__Group_0__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LinearDataConversion__Group_0__6__Impl
	rule__LinearDataConversion__Group_0__7
;
finally {
	restoreStackSize(stackSize);
}

rule__LinearDataConversion__Group_0__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinearDataConversionAccess().getColonKeyword_0_6()); }

	':' 

{ after(grammarAccess.getLinearDataConversionAccess().getColonKeyword_0_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LinearDataConversion__Group_0__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LinearDataConversion__Group_0__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LinearDataConversion__Group_0__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinearDataConversionAccess().getOffsetAssignment_0_7()); }
(rule__LinearDataConversion__OffsetAssignment_0_7)
{ after(grammarAccess.getLinearDataConversionAccess().getOffsetAssignment_0_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__LinearDataConversion__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LinearDataConversion__Group_1__0__Impl
	rule__LinearDataConversion__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LinearDataConversion__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinearDataConversionAccess().getLinearMappingKeyword_1_0()); }

	'linear mapping' 

{ after(grammarAccess.getLinearDataConversionAccess().getLinearMappingKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LinearDataConversion__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LinearDataConversion__Group_1__1__Impl
	rule__LinearDataConversion__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LinearDataConversion__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinearDataConversionAccess().getLeftSquareBracketKeyword_1_1()); }

	'[' 

{ after(grammarAccess.getLinearDataConversionAccess().getLeftSquareBracketKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LinearDataConversion__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LinearDataConversion__Group_1__2__Impl
	rule__LinearDataConversion__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LinearDataConversion__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinearDataConversionAccess().getFromIntervalAssignment_1_2()); }
(rule__LinearDataConversion__FromIntervalAssignment_1_2)
{ after(grammarAccess.getLinearDataConversionAccess().getFromIntervalAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LinearDataConversion__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LinearDataConversion__Group_1__3__Impl
	rule__LinearDataConversion__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__LinearDataConversion__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinearDataConversionAccess().getRightSquareBracketKeyword_1_3()); }

	']' 

{ after(grammarAccess.getLinearDataConversionAccess().getRightSquareBracketKeyword_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LinearDataConversion__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LinearDataConversion__Group_1__4__Impl
	rule__LinearDataConversion__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__LinearDataConversion__Group_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinearDataConversionAccess().getEqualsSignGreaterThanSignKeyword_1_4()); }

	'=>' 

{ after(grammarAccess.getLinearDataConversionAccess().getEqualsSignGreaterThanSignKeyword_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LinearDataConversion__Group_1__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LinearDataConversion__Group_1__5__Impl
	rule__LinearDataConversion__Group_1__6
;
finally {
	restoreStackSize(stackSize);
}

rule__LinearDataConversion__Group_1__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinearDataConversionAccess().getLeftSquareBracketKeyword_1_5()); }

	'[' 

{ after(grammarAccess.getLinearDataConversionAccess().getLeftSquareBracketKeyword_1_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LinearDataConversion__Group_1__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LinearDataConversion__Group_1__6__Impl
	rule__LinearDataConversion__Group_1__7
;
finally {
	restoreStackSize(stackSize);
}

rule__LinearDataConversion__Group_1__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinearDataConversionAccess().getToIntervalAssignment_1_6()); }
(rule__LinearDataConversion__ToIntervalAssignment_1_6)
{ after(grammarAccess.getLinearDataConversionAccess().getToIntervalAssignment_1_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LinearDataConversion__Group_1__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LinearDataConversion__Group_1__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LinearDataConversion__Group_1__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinearDataConversionAccess().getRightSquareBracketKeyword_1_7()); }

	']' 

{ after(grammarAccess.getLinearDataConversionAccess().getRightSquareBracketKeyword_1_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__DOUBLE__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DOUBLE__Group__0__Impl
	rule__DOUBLE__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDOUBLEAccess().getINTTerminalRuleCall_0()); }
	RULE_INT
{ after(grammarAccess.getDOUBLEAccess().getINTTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DOUBLE__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DOUBLE__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDOUBLEAccess().getGroup_1()); }
(rule__DOUBLE__Group_1__0)?
{ after(grammarAccess.getDOUBLEAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DOUBLE__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DOUBLE__Group_1__0__Impl
	rule__DOUBLE__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDOUBLEAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getDOUBLEAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DOUBLE__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DOUBLE__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDOUBLEAccess().getINTTerminalRuleCall_1_1()); }
	RULE_INT
{ after(grammarAccess.getDOUBLEAccess().getINTTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__SensorInterface__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSensorInterfaceAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getSensorInterfaceAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SensorInterface__DescriptionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSensorInterfaceAccess().getDescriptionSTRINGTerminalRuleCall_2_0()); }
	RULE_STRING{ after(grammarAccess.getSensorInterfaceAccess().getDescriptionSTRINGTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SensorInterface__IDAssignment_3_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSensorInterfaceAccess().getIDSTRINGTerminalRuleCall_3_3_0()); }
	RULE_STRING{ after(grammarAccess.getSensorInterfaceAccess().getIDSTRINGTerminalRuleCall_3_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SensorInterface__EncodingSettingsAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSensorInterfaceAccess().getEncodingSettingsEncodingSettingsParserRuleCall_5_0()); }
	ruleEncodingSettings{ after(grammarAccess.getSensorInterfaceAccess().getEncodingSettingsEncodingSettingsParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SensorInterface__DataDescriptionAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSensorInterfaceAccess().getDataDescriptionSensorDataDescriptionParserRuleCall_6_0()); }
	ruleSensorDataDescription{ after(grammarAccess.getSensorInterfaceAccess().getDataDescriptionSensorDataDescriptionParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EncodingSettings__CodingAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEncodingSettingsAccess().getCodingCodingEnumRuleCall_1_0()); }
	ruleCoding{ after(grammarAccess.getEncodingSettingsAccess().getCodingCodingEnumRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EncodingSettings__EndiannessAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEncodingSettingsAccess().getEndiannessEndiannessEnumRuleCall_3_0()); }
	ruleEndianness{ after(grammarAccess.getEncodingSettingsAccess().getEndiannessEndiannessEnumRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EncodingSettings__AlignmentAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEncodingSettingsAccess().getAlignmentINTTerminalRuleCall_5_0()); }
	RULE_INT{ after(grammarAccess.getEncodingSettingsAccess().getAlignmentINTTerminalRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EncodingSettings__IDAssignment_7_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEncodingSettingsAccess().getIDSTRINGTerminalRuleCall_7_3_0()); }
	RULE_STRING{ after(grammarAccess.getEncodingSettingsAccess().getIDSTRINGTerminalRuleCall_7_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SensorDataDescription__IDAssignment_2_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSensorDataDescriptionAccess().getIDSTRINGTerminalRuleCall_2_3_0()); }
	RULE_STRING{ after(grammarAccess.getSensorDataDescriptionAccess().getIDSTRINGTerminalRuleCall_2_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SensorDataDescription__DataSetsAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSensorDataDescriptionAccess().getDataSetsDataSetParserRuleCall_4_0()); }
	ruleDataSet{ after(grammarAccess.getSensorDataDescriptionAccess().getDataSetsDataSetParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataSet__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataSetAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getDataSetAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataSet__IDAssignment_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataSetAccess().getIDSTRINGTerminalRuleCall_2_2_0()); }
	RULE_STRING{ after(grammarAccess.getDataSetAccess().getIDSTRINGTerminalRuleCall_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataSet__DescriptionAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataSetAccess().getDescriptionSTRINGTerminalRuleCall_3_0()); }
	RULE_STRING{ after(grammarAccess.getDataSetAccess().getDescriptionSTRINGTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataSet__SubDataSetsAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataSetAccess().getSubDataSetsDataSetParserRuleCall_5_0()); }
	ruleDataSet{ after(grammarAccess.getDataSetAccess().getSubDataSetsDataSetParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataSet__DataAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataSetAccess().getDataDataParserRuleCall_6_0()); }
	ruleData{ after(grammarAccess.getDataSetAccess().getDataDataParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MeasurementData__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMeasurementDataAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getMeasurementDataAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MeasurementData__DataTypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMeasurementDataAccess().getDataTypeDataTypeEnumRuleCall_2_0()); }
	ruleDataType{ after(grammarAccess.getMeasurementDataAccess().getDataTypeDataTypeEnumRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MeasurementData__UnitAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMeasurementDataAccess().getUnitUNITTerminalRuleCall_4_0()); }
	RULE_UNIT{ after(grammarAccess.getMeasurementDataAccess().getUnitUNITTerminalRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MeasurementData__IDAssignment_5_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMeasurementDataAccess().getIDSTRINGTerminalRuleCall_5_3_0()); }
	RULE_STRING{ after(grammarAccess.getMeasurementDataAccess().getIDSTRINGTerminalRuleCall_5_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MeasurementData__AdjustmentsAssignment_6_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMeasurementDataAccess().getAdjustmentsDataAdjustmentParserRuleCall_6_3_0()); }
	ruleDataAdjustment{ after(grammarAccess.getMeasurementDataAccess().getAdjustmentsDataAdjustmentParserRuleCall_6_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MeasurementData__AdjustmentsAssignment_6_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMeasurementDataAccess().getAdjustmentsDataAdjustmentParserRuleCall_6_4_1_0()); }
	ruleDataAdjustment{ after(grammarAccess.getMeasurementDataAccess().getAdjustmentsDataAdjustmentParserRuleCall_6_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MeasurementData__DescriptionAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMeasurementDataAccess().getDescriptionSTRINGTerminalRuleCall_7_0()); }
	RULE_STRING{ after(grammarAccess.getMeasurementDataAccess().getDescriptionSTRINGTerminalRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NonMeasurementData__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNonMeasurementDataAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getNonMeasurementDataAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NonMeasurementData__DataTypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNonMeasurementDataAccess().getDataTypeDataTypeEnumRuleCall_2_0()); }
	ruleDataType{ after(grammarAccess.getNonMeasurementDataAccess().getDataTypeDataTypeEnumRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NonMeasurementData__ConstantAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNonMeasurementDataAccess().getConstantBOOLEANParserRuleCall_5_0()); }
	ruleBOOLEAN{ after(grammarAccess.getNonMeasurementDataAccess().getConstantBOOLEANParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NonMeasurementData__ValueAssignment_6_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNonMeasurementDataAccess().getValueSTRINGTerminalRuleCall_6_2_0()); }
	RULE_STRING{ after(grammarAccess.getNonMeasurementDataAccess().getValueSTRINGTerminalRuleCall_6_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NonMeasurementData__IDAssignment_7_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNonMeasurementDataAccess().getIDSTRINGTerminalRuleCall_7_3_0()); }
	RULE_STRING{ after(grammarAccess.getNonMeasurementDataAccess().getIDSTRINGTerminalRuleCall_7_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NonMeasurementData__DescriptionAssignment_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNonMeasurementDataAccess().getDescriptionSTRINGTerminalRuleCall_8_0()); }
	RULE_STRING{ after(grammarAccess.getNonMeasurementDataAccess().getDescriptionSTRINGTerminalRuleCall_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataRange__RangeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataRangeAccess().getRangeIntervalParserRuleCall_2_0()); }
	ruleInterval{ after(grammarAccess.getDataRangeAccess().getRangeIntervalParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Interval__LowerBoundAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntervalAccess().getLowerBoundDOUBLEParserRuleCall_0_0()); }
	ruleDOUBLE{ after(grammarAccess.getIntervalAccess().getLowerBoundDOUBLEParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Interval__UpperBoundAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntervalAccess().getUpperBoundDOUBLEParserRuleCall_2_0()); }
	ruleDOUBLE{ after(grammarAccess.getIntervalAccess().getUpperBoundDOUBLEParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LinearDataConversion__ScalingFactorAssignment_0_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinearDataConversionAccess().getScalingFactorDOUBLEParserRuleCall_0_3_0()); }
	ruleDOUBLE{ after(grammarAccess.getLinearDataConversionAccess().getScalingFactorDOUBLEParserRuleCall_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LinearDataConversion__OffsetAssignment_0_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinearDataConversionAccess().getOffsetDOUBLEParserRuleCall_0_7_0()); }
	ruleDOUBLE{ after(grammarAccess.getLinearDataConversionAccess().getOffsetDOUBLEParserRuleCall_0_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LinearDataConversion__FromIntervalAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinearDataConversionAccess().getFromIntervalIntervalParserRuleCall_1_2_0()); }
	ruleInterval{ after(grammarAccess.getLinearDataConversionAccess().getFromIntervalIntervalParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LinearDataConversion__ToIntervalAssignment_1_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinearDataConversionAccess().getToIntervalIntervalParserRuleCall_1_6_0()); }
	ruleInterval{ after(grammarAccess.getLinearDataConversionAccess().getToIntervalIntervalParserRuleCall_1_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_UNIT : '^'? ('a'..'z'|'A'..'Z') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


